var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.049,1,2.012]],["body/controllers/AppController.html",[0,1.751,1,3.356,2,1.432,3,0.374,4,0.318,5,0.318,6,3.568,7,0.033,8,1.432,9,1.432,10,1.56,11,0.528,12,0.623,13,2.945,14,3.568,15,0.374,16,0.021,17,2.465,18,2.231,19,0.027,20,0.027]],["title/modules/AppModule.html",[21,1.143,22,2.012]],["body/modules/AppModule.html",[1,2.849,2,1.27,3,0.231,4,0.196,5,0.196,7,0.033,8,0.885,9,0.885,10,0.963,11,0.607,12,0.553,13,2.789,14,2.204,15,0.231,16,0.013,19,0.02,20,0.02,21,1.383,22,3.887,23,1.146,24,1.645,25,2.204,26,2.204,27,2.204,28,3.081,29,2.96,30,3.081,31,3.081,32,1.978,33,1.378,34,1.378,35,2.645,36,2.186,37,2.186,38,1.522,39,0.963,40,2.645,41,1.167,42,1.254,43,1.383,44,1.378,45,2.645,46,2.645,47,1.383,48,1.913,49,2.645,50,2.186,51,1.522,52,2.645,53,1.507,54,1.254,55,1.378,56,1.913,57,2.645,58,0.344,59,2.645,60,1.913,61,2.645,62,2.645,63,2.645,64,2.204,65,2.645,66,1.913,67,2.645,68,2.645,69,2.645,70,2.645,71,2.645,72,2.645,73,2.645]],["title/injectables/AppService.html",[13,1.634,74,0.885]],["body/injectables/AppService.html",[3,0.401,4,0.341,5,0.341,7,0.032,11,0.464,12,0.669,13,2.846,15,0.401,16,0.023,19,0.028,20,0.028,74,1.541,75,2.179,76,3.83]],["title/classes/Book.html",[16,0.016,47,1.143]],["body/classes/Book.html",[3,0.279,4,0.237,5,0.237,7,0.033,11,0.496,15,0.279,16,0.022,19,0.022,20,0.022,47,1.577,58,0.716,77,1.383,78,2.66,79,0.517,80,2.256,81,4.916,82,4.095,83,1.644,84,3.555,85,4.916,86,2.284,87,2.387,88,4.332,89,1.193,90,3.193,91,3.193,92,1.9,93,3.151,94,3.193,95,4.332,96,3.193,97,3.193,98,3.532,99,1.267,100,4.916,101,4.916,102,2.309,103,2.777,104,3.532,105,1.267]],["title/classes/BookUsers.html",[16,0.016,53,1.245]],["body/classes/BookUsers.html",[3,0.21,4,0.178,5,0.178,7,0.033,11,0.468,15,0.21,16,0.012,19,0.018,20,0.018,41,1.816,42,1.139,53,1.405,54,2.659,58,0.714,77,1.041,79,0.389,80,1.844,82,3.504,83,1.406,84,3.041,86,2.38,87,2.319,89,1.189,92,1.552,93,2.696,98,3.172,99,0.953,103,2.27,104,3.432,105,1.405,106,2.921,107,2.001,108,4.206,109,2.42,110,4.206,111,1.088,112,1.822,113,3.541,114,2.402,115,3.356,116,2.402,117,2.402,118,2.402,119,2.402,120,2.402,121,1.54,122,2.95,123,2.001,124,2.402,125,2.402,126,2.402,127,2.402,128,3.541,129,2.402,130,0.621,131,0.621,132,0.621,133,0.677,134,1.405,135,3.541,136,3.541,137,2.402,138,2.402,139,3.541,140,2.001,141,0.953,142,2.001,143,2.402,144,0.875]],["title/controllers/BooksController.html",[0,1.049,145,2.012]],["body/controllers/BooksController.html",[0,0.682,2,0.682,3,0.178,4,0.151,5,0.151,7,0.033,8,1.046,9,1.046,10,0.742,11,0.491,12,0.297,15,0.178,16,0.01,17,1.173,18,1.061,19,0.016,20,0.016,47,1.845,50,1.173,58,0.555,79,0.33,83,1.627,87,1.997,89,0.998,92,1.793,99,0.809,111,0.961,112,1.65,130,1.105,131,1.192,132,1.105,133,1.3,134,2.074,144,1.771,145,2.006,146,1.698,147,1.306,148,2.607,149,2.607,150,2.607,151,4.272,152,2.607,153,2.038,154,2.441,155,2.038,156,4.22,157,1.698,158,2.038,159,2.915,160,2.038,161,1.698,162,2.038,163,2.038,164,2.038,165,1.698,166,1.698,167,2.038,168,2.038,169,3.129,170,2.006,171,1.698,172,1.698,173,1.698,174,1.474,175,1.698,176,1.698,177,1.306,178,1.63,179,1.698,180,1.474,181,1.698,182,3.089,183,1.474,184,1.698,185,1.698,186,2.038,187,2.038,188,1.698,189,1.698,190,0.966,191,1.698,192,2.441,193,1.483,194,2.038,195,3.129,196,3.129,197,1.698,198,2.038,199,3.129,200,1.698,201,1.698,202,2.038,203,2.038,204,1.474,205,3.173,206,2.038,207,1.355,208,1.984,209,2.038,210,2.038,211,1.698,212,2.038,213,2.038,214,1.306,215,2.038,216,2.038,217,2.038,218,2.038,219,1.698,220,2.038,221,2.038,222,1.698,223,2.038,224,2.038]],["title/modules/BooksModule.html",[21,1.143,28,1.806]],["body/modules/BooksModule.html",[2,1.583,3,0.319,4,0.271,5,0.271,7,0.033,8,1.221,9,1.221,10,1.33,11,0.581,12,0.531,15,0.319,16,0.018,19,0.024,20,0.024,21,1.724,23,1.582,24,2.051,28,3.396,32,2.466,33,1.902,34,1.902,36,2.725,37,2.101,38,2.101,39,1.33,47,1.33,56,2.64,145,3.368,178,3.074,179,3.042,180,2.64,225,3.042,226,3.042,227,3.651,228,3.651,229,3.651]],["title/injectables/BooksService.html",[74,0.885,178,1.634]],["body/injectables/BooksService.html",[3,0.177,4,0.151,5,0.151,7,0.033,11,0.49,12,0.553,15,0.177,16,0.01,18,1.978,19,0.016,20,0.016,39,0.739,47,2.103,58,0.598,74,0.879,75,0.962,79,0.328,80,1.624,83,1.27,89,1.051,92,1.79,105,0.805,111,0.958,112,2.444,130,1.19,131,1.19,132,1.19,133,1.202,134,2.072,140,1.69,141,1.927,144,1.552,148,2.598,149,2.598,150,2.598,152,2.598,157,2.598,161,2.598,166,2.598,178,1.624,180,1.467,190,2.021,192,1.301,193,2.021,207,1.846,208,2.719,230,1.69,231,4.263,232,1.794,233,2.029,234,2.453,235,3.118,236,2.598,237,3.118,238,2.029,239,2.029,240,2.029,241,2.029,242,1.69,243,3.118,244,3.118,245,1.301,246,1.999,247,3.551,248,2.029,249,1.69,250,2.029,251,3.118,252,4.046,253,3.118,254,3.118,255,2.453,256,2.029,257,2.029,258,2.029,259,3.118,260,2.598,261,1.69,262,2.255,263,2.029,264,1.69]],["title/controllers/BooksUsersController.html",[0,1.049,265,2.012]],["body/controllers/BooksUsersController.html",[0,0.816,2,0.816,3,0.213,4,0.181,5,0.181,7,0.033,8,0.816,9,0.816,10,0.888,11,0.502,12,0.355,15,0.213,16,0.012,17,1.404,18,1.271,19,0.018,20,0.018,50,2.061,51,2.866,53,2.135,54,1.157,55,1.271,58,0.608,79,0.395,83,1.741,87,2.025,89,1.012,92,1.883,99,0.968,106,2.711,111,1.1,130,1.209,131,1.209,132,1.209,133,1.319,134,2.19,144,1.703,147,1.564,154,2.72,156,4.337,159,2.061,170,2.296,172,2.032,174,1.764,175,2.032,176,2.032,177,1.564,181,2.032,184,2.032,185,2.032,188,2.032,204,2.59,205,2.032,219,2.984,222,2.984,265,2.296,266,2.032,267,4.243,268,2.984,269,2.984,270,2.984,271,2.984,272,2.44,273,2.44,274,2.032,275,2.44,276,2.032,277,2.44,278,2.032,279,2.44,280,1.865,281,2.032,282,2.44,283,2.44,284,2.44,285,2.44,286,2.44,287,2.44,288,2.44,289,2.44]],["title/modules/BooksUsersModule.html",[21,1.143,29,1.806]],["body/modules/BooksUsersModule.html",[2,1.522,3,0.3,4,0.255,5,0.255,7,0.033,8,1.15,9,1.15,10,1.252,11,0.597,12,0.5,15,0.3,16,0.017,19,0.023,20,0.023,21,1.657,23,1.489,24,1.972,29,3.341,32,2.371,33,1.791,34,1.791,36,2.619,37,1.978,38,1.978,39,1.252,41,1.398,42,1.63,47,1.657,48,2.486,50,2.619,51,1.978,53,1.364,55,1.791,106,1.791,265,3.271,280,3.024,281,2.864,290,2.864,291,2.864,292,3.438,293,3.438,294,3.438,295,3.438]],["title/injectables/BooksUsersService.html",[74,0.885,280,1.634]],["body/injectables/BooksUsersService.html",[3,0.168,4,0.143,5,0.143,7,0.033,11,0.48,12,0.281,15,0.168,16,0.01,19,0.015,20,0.015,39,0.703,41,0.921,42,0.915,47,1.34,48,1.395,51,2.738,53,2.038,54,0.915,55,1.005,58,0.584,74,0.846,75,0.915,79,0.312,83,1.23,84,1.395,89,0.973,92,1.764,105,0.766,106,2.587,109,1.11,111,0.921,112,2.415,130,1.163,131,1.163,132,1.163,133,1.17,134,2.038,141,1.647,144,1.511,190,1.744,193,2.131,207,2.061,208,2.587,232,1.726,234,3.102,236,3.065,245,1.237,246,2.358,247,2.499,249,1.607,252,2.499,255,2.117,261,1.607,262,2.169,264,1.607,268,2.499,269,2.499,270,2.499,271,2.499,274,2.499,276,2.499,278,2.499,280,1.562,296,1.607,297,1.929,298,3.065,299,1.929,300,2.999,301,2.999,302,1.929,303,3.744,304,1.929,305,1.929,306,1.929,307,1.929,308,1.607,309,3.679,310,1.929,311,2.999,312,1.929,313,1.607,314,1.929,315,1.929,316,1.929,317,2.999,318,1.929,319,1.929,320,1.929,321,1.929,322,1.929,323,1.929,324,1.929,325,1.929,326,1.929,327,2.999,328,1.929,329,1.929,330,1.929,331,1.929,332,1.929]],["title/classes/CustomException.html",[16,0.016,333,1.806]],["body/classes/CustomException.html",[3,0.362,4,0.308,5,0.308,7,0.032,11,0.419,12,0.604,15,0.362,16,0.021,19,0.026,20,0.026,58,0.539,77,1.798,86,2.416,89,0.898,130,1.074,131,1.074,132,1.074,232,2.389,333,2.955,334,3.458,335,5.135,336,4.032,337,5.135,338,4.151,339,4.151,340,3.458,341,4.151,342,4.151]],["title/classes/HttpExceptionFilter.html",[16,0.016,159,1.806]],["body/classes/HttpExceptionFilter.html",[3,0.298,4,0.253,5,0.253,7,0.033,11,0.457,12,0.497,15,0.298,16,0.017,19,0.023,20,0.023,58,0.444,60,3.677,77,1.478,79,0.552,89,0.739,111,1.391,130,0.883,131,0.883,132,0.883,133,0.963,141,1.354,159,2.607,207,2.346,336,3.916,343,2.843,344,3.276,345,4.236,346,4.236,347,3.774,348,4.512,349,3.413,350,2.843,351,2.843,352,3.774,353,4.236,354,2.468,355,3.413,356,2.843,357,2.843,358,2.843,359,2.843,360,3.774,361,2.843,362,2.843,363,2.843,364,2.843,365,2.843,366,2.843,367,2.843,368,2.843,369,3.413,370,2.843]],["title/classes/Login.html",[16,0.016,43,1.143]],["body/classes/Login.html",[3,0.284,4,0.242,5,0.242,7,0.033,11,0.501,15,0.284,16,0.016,19,0.023,20,0.023,41,1.825,42,1.545,43,1.599,58,0.691,66,3.592,77,1.412,79,0.528,80,2.288,83,1.661,86,2.303,87,2.303,89,1.151,92,1.469,93,3.184,98,3.184,99,1.293,103,2.815,104,3.184,105,1.293,109,2.859,115,3.176,121,2.089,122,3.659,123,2.715,371,2.715,372,3.259,373,3.259,374,3.259,375,2.715,376,3.259,377,3.259,378,3.659,379,4.392,380,3.259]],["title/controllers/LoginController.html",[0,1.049,381,2.012]],["body/controllers/LoginController.html",[0,1.057,2,1.057,3,0.276,4,0.235,5,0.235,7,0.033,8,1.057,9,1.057,10,1.151,11,0.53,12,0.46,15,0.276,16,0.016,17,1.819,18,1.646,19,0.022,20,0.022,43,2.148,44,1.646,58,0.411,79,0.512,87,1.864,89,0.931,99,1.254,111,1.321,130,0.818,131,0.818,132,0.818,133,1.213,134,2.179,144,1.781,147,2.026,154,3.365,170,2.026,177,2.026,381,2.758,382,2.633,383,4.373,384,3.584,385,2.633,386,3.161,387,2.633,388,3.161,389,2.547,390,2.633,391,3.161,392,3.161,393,3.161,394,3.161,395,3.161,396,3.161,397,3.161,398,2.633,399,3.161]],["title/modules/LoginModule.html",[21,1.143,30,1.806]],["body/modules/LoginModule.html",[2,1.587,3,0.32,4,0.272,5,0.272,7,0.033,8,1.226,9,1.226,10,1.335,11,0.582,12,0.533,15,0.32,16,0.018,19,0.024,20,0.024,21,1.728,23,1.588,24,2.056,30,3.4,32,2.472,33,1.909,34,1.909,36,2.731,37,2.109,38,2.109,39,1.335,43,1.335,44,1.909,381,3.375,389,3.078,390,3.054,400,3.054,401,3.054,402,3.666,403,3.666,404,3.666]],["title/injectables/LoginService.html",[74,0.885,389,1.634]],["body/injectables/LoginService.html",[3,0.212,4,0.18,5,0.18,7,0.034,11,0.501,12,0.353,15,0.212,16,0.012,19,0.018,20,0.018,39,0.884,41,0.745,43,1.892,44,1.264,58,0.464,74,1.006,75,1.151,79,0.393,83,0.812,86,1.051,89,0.916,105,0.963,109,2.435,111,1.096,112,2.327,130,0.923,131,0.923,132,0.923,133,1.006,134,1.972,141,1.679,144,1.541,190,1.151,193,2.006,207,2.153,208,2.588,232,2.053,234,2.684,245,1.556,255,2.435,262,1.755,333,1.397,336,1.755,340,2.022,383,3.885,384,2.972,387,2.972,389,1.858,405,2.022,406,2.427,407,2.427,408,2.972,409,2.427,410,2.427,411,2.427,412,2.022,413,2.427,414,3.525,415,2.022,416,2.427,417,2.427,418,2.427,419,2.427,420,1.755,421,2.427,422,2.022,423,3.568,424,2.427,425,2.427,426,2.427,427,2.972,428,3.568,429,2.022,430,2.427,431,2.427,432,2.022,433,2.427,434,2.427,435,2.427,436,2.427,437,2.427,438,2.427]],["title/classes/Person.html",[16,0.016,41,0.964]],["body/classes/Person.html",[3,0.202,4,0.172,5,0.172,7,0.033,11,0.46,15,0.202,16,0.012,19,0.018,20,0.018,41,1.06,43,1.981,44,1.208,50,1.335,53,1.81,54,1.1,55,1.208,58,0.755,64,3.432,66,2.979,77,1.005,79,0.375,80,1.797,83,1.378,86,2.568,87,2.517,89,1.258,92,1.709,93,2.641,98,3.626,99,0.92,103,2.212,104,3.626,105,0.92,109,2.371,115,4.019,121,2.212,303,3.801,375,1.932,378,2.874,420,1.677,439,1.932,440,4.12,441,4.12,442,4.12,443,4.12,444,4.12,445,4.12,446,2.319,447,2.319,448,2.319,449,2.319,450,2.319,451,2.319,452,2.319,453,2.319,454,2.319,455,2.319,456,2.319,457,2.319,458,2.319,459,3.45,460,2.319]],["title/controllers/PersonController.html",[0,1.049,461,2.012]],["body/controllers/PersonController.html",[0,0.88,2,0.88,3,0.23,4,0.195,5,0.195,7,0.033,8,0.88,9,0.88,10,0.958,11,0.518,12,0.383,15,0.23,16,0.013,17,1.514,18,1.37,19,0.019,20,0.019,41,1.691,42,1.247,58,0.492,79,0.426,83,1.265,87,1.919,89,0.959,92,1.481,99,1.044,111,1.162,112,1.919,130,0.979,131,0.979,132,0.979,133,1.249,134,2.121,144,1.764,147,1.686,154,2.84,170,1.686,171,2.191,173,2.191,174,1.902,177,1.686,182,3.503,183,1.902,189,2.191,190,1.247,191,2.191,193,1.247,200,2.191,201,2.191,204,2.736,208,2.783,211,4.036,313,3.152,385,2.191,398,2.191,461,2.425,462,2.191,463,3.152,464,4.036,465,3.152,466,2.191,467,2.631,468,2.631,469,2.191,470,2.631,471,2.307,472,2.191,473,2.631,474,2.631,475,2.631,476,2.631,477,2.631,478,2.631,479,2.631,480,2.631,481,2.631,482,2.631,483,2.631]],["title/modules/PersonModule.html",[21,1.143,31,1.806]],["body/modules/PersonModule.html",[2,1.533,3,0.303,4,0.258,5,0.258,7,0.033,8,1.162,9,1.162,10,1.266,11,0.599,12,0.506,15,0.303,16,0.017,19,0.024,20,0.024,21,1.67,23,1.506,24,1.986,31,3.351,32,2.388,33,1.81,34,1.81,36,2.638,37,2,38,2,39,1.266,41,1.068,42,1.648,43,1.266,53,1.379,54,1.648,55,1.81,56,2.514,106,1.81,461,3.289,471,3.033,472,2.896,484,2.896,485,2.896,486,3.476,487,3.476,488,3.476,489,3.476,490,3.476]],["title/injectables/PersonService.html",[74,0.885,471,1.634]],["body/injectables/PersonService.html",[3,0.223,4,0.19,5,0.19,7,0.033,8,0.856,9,0.856,11,0.534,12,0.372,15,0.223,16,0.013,19,0.019,20,0.019,39,0.932,41,1.559,43,1.742,44,1.333,58,0.567,74,1.046,75,1.213,79,0.414,83,0.856,89,1.035,92,1.459,105,1.016,111,1.139,112,2.293,130,1.128,131,1.128,132,1.128,133,1.23,134,2.101,141,1.472,144,1.588,190,1.758,193,1.758,207,1.889,208,2.272,232,2.134,234,3.142,245,1.64,255,1.473,298,3.089,308,2.132,333,1.473,408,3.633,412,2.132,414,2.132,415,2.132,420,1.85,422,2.132,427,2.132,432,2.132,463,3.089,464,3.984,465,3.089,466,3.089,469,3.089,471,1.932,491,2.132,492,2.559,493,2.559,494,2.559,495,2.559,496,2.559,497,2.559,498,2.559,499,2.559,500,2.559,501,2.559,502,2.559,503,2.559,504,4.361,505,2.559,506,2.559,507,2.559]],["title/interfaces/SwaggerConfig.html",[508,2.012,509,2.012]],["body/interfaces/SwaggerConfig.html",[3,0.345,4,0.294,5,0.294,7,0.032,15,0.345,19,0.026,20,0.026,58,0.744,79,0.641,80,2.597,86,2.756,508,2.538,509,3.196,510,3.959,511,3.298,512,4.143,513,4.773,514,4.773,515,4.773]],["title/classes/ValidationExceptionFilter.html",[16,0.016,516,2.269]],["body/classes/ValidationExceptionFilter.html",[3,0.297,4,0.252,5,0.252,7,0.033,11,0.456,12,0.495,15,0.297,16,0.017,19,0.023,20,0.023,58,0.442,60,3.67,77,1.473,79,0.55,89,0.736,111,1.388,130,0.88,131,0.88,132,0.88,133,0.959,141,1.35,207,2.343,246,3.467,344,3.268,345,4.228,346,4.228,347,3.765,348,4.505,350,2.833,351,2.833,352,4.228,353,4.228,354,2.459,356,2.833,357,2.833,358,2.833,359,2.833,360,3.765,361,2.833,362,2.833,363,2.833,364,2.833,365,2.833,366,2.833,367,2.833,368,2.833,370,2.833,516,3.268,517,2.833,518,3.401,519,3.401,520,3.401]],["title/injectables/ValidationPipe.html",[74,0.885,214,2.012]],["body/injectables/ValidationPipe.html",[3,0.264,4,0.225,5,0.225,7,0.033,11,0.483,12,0.441,15,0.264,16,0.024,19,0.021,20,0.021,58,0.543,74,1.178,75,1.436,79,0.49,86,1.312,89,0.904,92,1.013,102,2.19,111,1.283,112,2.072,121,1.941,130,1.081,131,1.081,132,1.081,133,1.178,141,1.202,142,2.523,144,1.742,165,2.523,190,2.267,192,3.305,193,1.436,207,2.072,214,2.678,246,1.941,255,1.743,344,2.19,429,3.984,521,2.523,522,4.178,523,4.178,524,4.178,525,3.028,526,4.783,527,4.178,528,5.156,529,3.028,530,4.178,531,3.028,532,3.028,533,2.523,534,3.028,535,4.178,536,3.028,537,3.028,538,3.028,539,3.028,540,2.523,541,3.028,542,3.028,543,3.028,544,3.028]],["title/coverage.html",[545,3.096]],["body/coverage.html",[0,1.76,1,1.802,5,0.209,6,2.342,7,0.033,13,1.464,16,0.028,19,0.02,20,0.02,41,0.864,43,1.024,47,1.024,51,2.282,53,1.116,54,1.333,58,0.365,74,1.541,76,2.342,78,2.342,106,2.394,107,2.342,141,1.116,145,1.802,146,2.342,159,1.618,178,1.464,214,1.802,230,2.342,265,1.802,266,2.342,280,1.464,296,2.342,333,1.618,334,2.342,343,2.342,371,2.342,381,1.802,382,2.342,389,1.464,405,2.342,439,2.342,461,1.802,462,2.342,471,1.464,491,2.342,508,1.802,509,1.802,511,2.342,516,2.033,517,2.342,521,2.342,540,5.274,545,2.033,546,2.811,547,2.811,548,2.811,549,5.264,550,4.992,551,4.596,552,2.811,553,2.811,554,4.596,555,3.966,556,3.966,557,2.342,558,3.966,559,2.342,560,2.811,561,2.342,562,2.811,563,2.342,564,2.342,565,2.342,566,2.811,567,2.811]],["title/dependencies.html",[24,1.635,568,2.622]],["body/dependencies.html",[7,0.033,12,0.555,16,0.024,19,0.025,20,0.025,24,1.652,39,1.389,99,1.514,102,2.758,105,1.514,182,3.521,183,3.521,197,3.178,354,3.521,533,3.178,569,5.364,570,3.814,571,3.814,572,3.814,573,3.814,574,3.814,575,3.814,576,3.814,577,3.814,578,3.814,579,3.814,580,3.814,581,3.814,582,3.814,583,3.814,584,3.814,585,3.814,586,3.814,587,3.814,588,4.87,589,3.814,590,3.814,591,3.814,592,3.814]],["title/miscellaneous/functions.html",[593,1.68,594,3.144]],["body/miscellaneous/functions.html",[7,0.031,19,0.028,20,0.028,58,0.578,79,0.719,130,1.15,131,1.15,132,1.15,133,1.254,557,3.703,559,4.787,564,3.703,565,4.461,593,2.849,594,3.703,595,4.445,596,4.445,597,4.445,598,5.355,599,3.703,600,4.445]],["title/index.html",[79,0.424,601,2.622,602,2.622]],["body/index.html",[4,0.25,7,0.032,19,0.023,20,0.023,234,1.936,512,2.433,545,2.433,599,2.803,603,3.364,604,3.364,605,4.487,606,3.364,607,3.364,608,3.364,609,3.364,610,3.364,611,3.364,612,5.048,613,3.364,614,3.364,615,3.364,616,5.89,617,3.364,618,3.364,619,5.77,620,3.364,621,3.364,622,4.487,623,3.364,624,3.364,625,3.364,626,3.364,627,4.487,628,4.487,629,3.364,630,3.364,631,3.364,632,4.487,633,4.487,634,3.364,635,3.364,636,3.364,637,3.364,638,3.364,639,2.803,640,3.364,641,3.364,642,3.364,643,3.364,644,3.364,645,3.364,646,3.364,647,3.364,648,3.364,649,3.364,650,3.364,651,3.364,652,3.364,653,3.364,654,3.364,655,3.364,656,3.364,657,3.364]],["title/modules.html",[23,1.854]],["body/modules.html",[7,0.027,19,0.027,20,0.027,22,2.823,23,1.907,28,2.534,29,2.534,30,2.534,31,2.534,639,5.072,658,6.088,659,6.088,660,6.088]],["title/overview.html",[661,3.566]],["body/overview.html",[2,1.158,7,0.032,13,2.667,19,0.024,20,0.024,22,4.001,23,1.5,24,1.981,25,2.885,26,2.885,27,2.885,28,3.259,29,3.259,30,3.259,31,3.259,32,2.382,33,1.804,34,1.804,75,1.642,77,1.5,178,2.667,225,2.885,226,2.885,260,2.885,280,2.667,290,2.885,291,2.885,389,2.667,400,2.885,401,2.885,471,2.667,484,2.885,485,2.885,508,2.22,661,2.885,662,4.574,663,3.463,664,3.463]],["title/miscellaneous/variables.html",[593,1.68,665,3.144]],["body/miscellaneous/variables.html",[7,0.032,19,0.027,20,0.027,47,2.072,58,0.564,79,0.703,192,2.783,242,3.618,509,2.783,512,3.14,513,3.618,514,3.618,515,3.618,561,3.618,563,4.398,593,2.783,665,3.618,666,4.342,667,5.689,668,4.342,669,4.342]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"interfaces/SwaggerConfig.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":540,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0.1.13",{"_index":583,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":578,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":592,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":577,"title":{},"body":{"dependencies.html":{}}}],["0.7.5",{"_index":589,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":554,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":555,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":556,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":260,"title":{},"body":{"injectables/BooksService.html":{},"overview.html":{}}}],["1.0",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":576,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":580,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":585,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":574,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":201,"title":{},"body":{"controllers/BooksController.html":{},"controllers/PersonController.html":{}}}],["3306",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["4.3.0",{"_index":591,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":662,"title":{},"body":{"overview.html":{}}}],["5.1.5",{"_index":572,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":663,"title":{},"body":{"overview.html":{}}}],["7",{"_index":664,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":587,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["8.0.2",{"_index":573,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":217,"title":{},"body":{"controllers/BooksController.html":{}}}],["addbookdetails",{"_index":148,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["addbookdetails(@body",{"_index":215,"title":{},"body":{"controllers/BooksController.html":{}}}],["addbookdetails(book",{"_index":237,"title":{},"body":{"injectables/BooksService.html":{}}}],["addbookdetails(user",{"_index":153,"title":{},"body":{"controllers/BooksController.html":{}}}],["addbookuserdetails",{"_index":268,"title":{},"body":{"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{}}}],["addbookuserdetails(@body",{"_index":284,"title":{},"body":{"controllers/BooksUsersController.html":{}}}],["addbookuserdetails(bookuser",{"_index":301,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["addbookuserdetails(user",{"_index":272,"title":{},"body":{"controllers/BooksUsersController.html":{}}}],["added",{"_index":253,"title":{},"body":{"injectables/BooksService.html":{}}}],["addlogindetails(@body",{"_index":393,"title":{},"body":{"controllers/LoginController.html":{}}}],["addlogindetails(login",{"_index":413,"title":{},"body":{"injectables/LoginService.html":{}}}],["addperson",{"_index":113,"title":{},"body":{"classes/BookUsers.html":{}}}],["addperson(person",{"_index":128,"title":{},"body":{"classes/BookUsers.html":{}}}],["addpersondetails",{"_index":463,"title":{},"body":{"controllers/PersonController.html":{},"injectables/PersonService.html":{}}}],["addpersondetails(@body",{"_index":475,"title":{},"body":{"controllers/PersonController.html":{}}}],["addpersondetails(person",{"_index":466,"title":{},"body":{"controllers/PersonController.html":{},"injectables/PersonService.html":{}}}],["addressline1",{"_index":440,"title":{},"body":{"classes/Person.html":{}}}],["addressline2",{"_index":441,"title":{},"body":{"classes/Person.html":{}}}],["amazing",{"_index":640,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":98,"title":{},"body":{"classes/Book.html":{},"classes/BookUsers.html":{},"classes/Login.html":{},"classes/Person.html":{}}}],["apitags",{"_index":177,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{},"controllers/LoginController.html":{},"controllers/PersonController.html":{}}}],["apitags('books",{"_index":185,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{}}}],["apitags('login",{"_index":392,"title":{},"body":{"controllers/LoginController.html":{}}}],["apitags('person",{"_index":474,"title":{},"body":{"controllers/PersonController.html":{}}}],["app",{"_index":599,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.controller",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":611,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":22,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":13,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":528,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":348,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["array",{"_index":142,"title":{},"body":{"classes/BookUsers.html":{},"injectables/ValidationPipe.html":{}}}],["async",{"_index":112,"title":{},"body":{"classes/BookUsers.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"injectables/LoginService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"injectables/ValidationPipe.html":{}}}],["author",{"_index":650,"title":{},"body":{"index.html":{}}}],["await",{"_index":193,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"injectables/LoginService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"injectables/ValidationPipe.html":{}}}],["backers",{"_index":641,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":246,"title":{},"body":{"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["badrequestexception('validation",{"_index":541,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["body",{"_index":170,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{},"controllers/LoginController.html":{},"controllers/PersonController.html":{}}}],["book",{"_index":47,"title":{"classes/Book.html":{}},"body":{"modules/AppModule.html":{},"classes/Book.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["bookauthor",{"_index":81,"title":{},"body":{"classes/Book.html":{}}}],["bookmgmnt",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["bookname",{"_index":82,"title":{},"body":{"classes/Book.html":{},"classes/BookUsers.html":{}}}],["bookrepository",{"_index":236,"title":{},"body":{"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{}}}],["bookresult",{"_index":324,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["bookresult.bookname",{"_index":327,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["books",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"classes/Person.html":{}}}],["books.controller",{"_index":228,"title":{},"body":{"modules/BooksModule.html":{}}}],["books.service",{"_index":179,"title":{},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{}}}],["books/books.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["books/entity/books.entity",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{}}}],["bookscontroller",{"_index":145,"title":{"controllers/BooksController.html":{}},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"coverage.html":{}}}],["bookservice",{"_index":188,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{}}}],["booksmodule",{"_index":28,"title":{"modules/BooksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules.html":{},"overview.html":{}}}],["booksservice",{"_index":178,"title":{"injectables/BooksService.html":{}},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"coverage.html":{},"overview.html":{}}}],["booksuserscontroller",{"_index":265,"title":{"controllers/BooksUsersController.html":{}},"body":{"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"coverage.html":{}}}],["booksusersmodule",{"_index":29,"title":{"modules/BooksUsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BooksUsersModule.html":{},"modules.html":{},"overview.html":{}}}],["booksusersmodule,cachemodule.register",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["booksusersservice",{"_index":280,"title":{"injectables/BooksUsersService.html":{}},"body":{"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"coverage.html":{},"overview.html":{}}}],["bookuser",{"_index":303,"title":{},"body":{"injectables/BooksUsersService.html":{},"classes/Person.html":{}}}],["bookuser.bookname",{"_index":326,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["bookuser.date",{"_index":319,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["bookuser.emailid",{"_index":311,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["bookuser.isbnnumber",{"_index":317,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["bookuser.person",{"_index":460,"title":{},"body":{"classes/Person.html":{}}}],["bookuser.reviewcomments",{"_index":321,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["bookuserrepository",{"_index":300,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["bookusers",{"_index":53,"title":{"classes/BookUsers.html":{}},"body":{"modules/AppModule.html":{},"classes/BookUsers.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"coverage.html":{}}}],["boolean",{"_index":429,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":559,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":660,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":658,"title":{},"body":{"modules.html":{}}}],["building",{"_index":606,"title":{},"body":{"index.html":{}}}],["cache",{"_index":182,"title":{},"body":{"controllers/BooksController.html":{},"controllers/PersonController.html":{},"dependencies.html":{}}}],["cache_manager",{"_index":171,"title":{},"body":{"controllers/BooksController.html":{},"controllers/PersonController.html":{}}}],["cachemanager",{"_index":191,"title":{},"body":{"controllers/BooksController.html":{},"controllers/PersonController.html":{}}}],["cachemodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/PersonModule.html":{}}}],["cacheresult",{"_index":211,"title":{},"body":{"controllers/BooksController.html":{},"controllers/PersonController.html":{}}}],["cascade",{"_index":122,"title":{},"body":{"classes/BookUsers.html":{},"classes/Login.html":{}}}],["cascade'})@jointable",{"_index":125,"title":{},"body":{"classes/BookUsers.html":{}}}],["catch",{"_index":346,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["catch(badrequestexception",{"_index":519,"title":{},"body":{"classes/ValidationExceptionFilter.html":{}}}],["catch(exception",{"_index":347,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["catch(httpexception",{"_index":355,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["chelli1",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":16,"title":{"classes/Book.html":{},"classes/BookUsers.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"classes/Login.html":{},"classes/Person.html":{},"classes/ValidationExceptionFilter.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":77,"title":{},"body":{"classes/Book.html":{},"classes/BookUsers.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"classes/Login.html":{},"classes/Person.html":{},"classes/ValidationExceptionFilter.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_booksmodule",{"_index":225,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["cluster_booksmodule_providers",{"_index":226,"title":{},"body":{"modules/BooksModule.html":{},"overview.html":{}}}],["cluster_booksusersmodule",{"_index":290,"title":{},"body":{"modules/BooksUsersModule.html":{},"overview.html":{}}}],["cluster_booksusersmodule_providers",{"_index":291,"title":{},"body":{"modules/BooksUsersModule.html":{},"overview.html":{}}}],["cluster_loginmodule",{"_index":400,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_providers",{"_index":401,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_personmodule",{"_index":484,"title":{},"body":{"modules/PersonModule.html":{},"overview.html":{}}}],["cluster_personmodule_providers",{"_index":485,"title":{},"body":{"modules/PersonModule.html":{},"overview.html":{}}}],["column",{"_index":104,"title":{},"body":{"classes/Book.html":{},"classes/BookUsers.html":{},"classes/Login.html":{},"classes/Person.html":{}}}],["column()@apiproperty",{"_index":115,"title":{},"body":{"classes/BookUsers.html":{},"classes/Login.html":{},"classes/Person.html":{}}}],["column()@apiproperty()@isnumber",{"_index":95,"title":{},"body":{"classes/Book.html":{}}}],["column()@apiproperty()@isstring",{"_index":88,"title":{},"body":{"classes/Book.html":{}}}],["console.log(\"from",{"_index":313,"title":{},"body":{"injectables/BooksUsersService.html":{},"controllers/PersonController.html":{}}}],["console.log(\"person",{"_index":416,"title":{},"body":{"injectables/LoginService.html":{}}}],["console.log(\"personresult",{"_index":312,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["console.log('from",{"_index":216,"title":{},"body":{"controllers/BooksController.html":{}}}],["console.log(cacheresult",{"_index":481,"title":{},"body":{"controllers/PersonController.html":{}}}],["const",{"_index":207,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoginService.html":{},"injectables/PersonService.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["constructor",{"_index":232,"title":{},"body":{"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"injectables/LoginService.html":{},"injectables/PersonService.html":{}}}],["constructor(bookrepository",{"_index":233,"title":{},"body":{"injectables/BooksService.html":{}}}],["constructor(bookuserrepository",{"_index":297,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["constructor(e",{"_index":337,"title":{},"body":{"classes/CustomException.html":{}}}],["constructor(loginrepository",{"_index":406,"title":{},"body":{"injectables/LoginService.html":{}}}],["constructor(personrepository",{"_index":492,"title":{},"body":{"injectables/PersonService.html":{}}}],["constructor(private",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{},"controllers/LoginController.html":{},"controllers/PersonController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{},"controllers/LoginController.html":{},"controllers/PersonController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{},"controllers/LoginController.html":{},"controllers/PersonController.html":{},"coverage.html":{}}}],["controller('books",{"_index":184,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{}}}],["controller('login",{"_index":391,"title":{},"body":{"controllers/LoginController.html":{}}}],["controller('person",{"_index":473,"title":{},"body":{"controllers/PersonController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"overview.html":{}}}],["country",{"_index":442,"title":{},"body":{"classes/Person.html":{}}}],["coverage",{"_index":545,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createdocument",{"_index":565,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createdocument(app",{"_index":597,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ctx",{"_index":356,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":359,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":358,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["customexception",{"_index":333,"title":{"classes/CustomException.html":{}},"body":{"classes/CustomException.html":{},"injectables/LoginService.html":{},"injectables/PersonService.html":{},"coverage.html":{}}}],["customexception(\"no",{"_index":437,"title":{},"body":{"injectables/LoginService.html":{}}}],["customexception(\"person",{"_index":507,"title":{},"body":{"injectables/PersonService.html":{}}}],["data",{"_index":195,"title":{},"body":{"controllers/BooksController.html":{}}}],["database",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["date",{"_index":108,"title":{},"body":{"classes/BookUsers.html":{}}}],["date().toisostring",{"_index":366,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["db",{"_index":203,"title":{},"body":{"controllers/BooksController.html":{}}}],["decorators",{"_index":87,"title":{},"body":{"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"classes/Person.html":{},"controllers/PersonController.html":{}}}],["default",{"_index":242,"title":{},"body":{"injectables/BooksService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":89,"title":{},"body":{"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["delete",{"_index":172,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{}}}],["delete('/:id",{"_index":219,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{}}}],["delete('/:id')@usefilters(new",{"_index":158,"title":{},"body":{"controllers/BooksController.html":{}}}],["deletebookbyid",{"_index":149,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["deletebookbyid(@param('id",{"_index":220,"title":{},"body":{"controllers/BooksController.html":{}}}],["deletebookbyid(id",{"_index":157,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["deletebookuserbyid",{"_index":269,"title":{},"body":{"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{}}}],["deletebookuserbyid(@param('id",{"_index":286,"title":{},"body":{"controllers/BooksUsersController.html":{}}}],["deletebookuserbyid(id",{"_index":274,"title":{},"body":{"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{}}}],["deleted",{"_index":261,"title":{},"body":{"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{}}}],["dependencies",{"_index":24,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/BooksUsersModule.html":{},"modules/LoginModule.html":{},"modules/PersonModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":512,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["description:\"bad",{"_index":520,"title":{},"body":{"classes/ValidationExceptionFilter.html":{}}}],["description:\"http",{"_index":369,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["detail",{"_index":438,"title":{},"body":{"injectables/LoginService.html":{}}}],["details",{"_index":252,"title":{},"body":{"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{}}}],["development",{"_index":618,"title":{},"body":{"index.html":{}}}],["disable",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{}}}],["documentation",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["e",{"_index":339,"title":{},"body":{"classes/CustomException.html":{}}}],["e2e",{"_index":629,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":607,"title":{},"body":{"index.html":{}}}],["email",{"_index":426,"title":{},"body":{"injectables/LoginService.html":{}}}],["emailid",{"_index":109,"title":{},"body":{"classes/BookUsers.html":{},"injectables/BooksUsersService.html":{},"classes/Login.html":{},"injectables/LoginService.html":{},"classes/Person.html":{}}}],["entities",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["entity",{"_index":103,"title":{},"body":{"classes/Book.html":{},"classes/BookUsers.html":{},"classes/Login.html":{},"classes/Person.html":{}}}],["entity/books",{"_index":294,"title":{},"body":{"modules/BooksUsersModule.html":{}}}],["entity/books.entity",{"_index":180,"title":{},"body":{"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{}}}],["entity/person.entity",{"_index":497,"title":{},"body":{"injectables/PersonService.html":{}}}],["error",{"_index":370,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["errors",{"_index":537,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":539,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["eslint",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{}}}],["exception",{"_index":350,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["exception.getstatus",{"_index":361,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["exceptionfilter",{"_index":345,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["export",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"interfaces/SwaggerConfig.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["express",{"_index":354,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":335,"title":{},"body":{"classes/CustomException.html":{}}}],["failed",{"_index":542,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["fake",{"_index":202,"title":{},"body":{"controllers/BooksController.html":{}}}],["fakevalue",{"_index":186,"title":{},"body":{"controllers/BooksController.html":{}}}],["false",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"interfaces/SwaggerConfig.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["filter/customexception.exception",{"_index":498,"title":{},"body":{"injectables/PersonService.html":{}}}],["following",{"_index":257,"title":{},"body":{"injectables/BooksService.html":{}}}],["forbiddenexception",{"_index":247,"title":{},"body":{"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{}}}],["found",{"_index":427,"title":{},"body":{"injectables/LoginService.html":{},"injectables/PersonService.html":{}}}],["framework",{"_index":605,"title":{},"body":{"index.html":{}}}],["function",{"_index":558,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":594,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(\"/getall",{"_index":398,"title":{},"body":{"controllers/LoginController.html":{},"controllers/PersonController.html":{}}}],["get('/:id",{"_index":204,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{},"controllers/PersonController.html":{}}}],["get('/:id')@usefilters(new",{"_index":162,"title":{},"body":{"controllers/BooksController.html":{}}}],["get('/getall",{"_index":385,"title":{},"body":{"controllers/LoginController.html":{},"controllers/PersonController.html":{}}}],["getalllogindetails",{"_index":383,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["getallpersondetails",{"_index":464,"title":{},"body":{"controllers/PersonController.html":{},"injectables/PersonService.html":{}}}],["getbookbyid",{"_index":150,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["getbookbyid(@param('id",{"_index":206,"title":{},"body":{"controllers/BooksController.html":{}}}],["getbookbyid(id",{"_index":161,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["getbookuserbyid",{"_index":270,"title":{},"body":{"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{}}}],["getbookuserbyid(@param('id",{"_index":282,"title":{},"body":{"controllers/BooksUsersController.html":{}}}],["getbookuserbyid(id",{"_index":276,"title":{},"body":{"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{}}}],["getpersonbyid",{"_index":465,"title":{},"body":{"controllers/PersonController.html":{},"injectables/PersonService.html":{}}}],["getpersonbyid(@param('id",{"_index":482,"title":{},"body":{"controllers/PersonController.html":{}}}],["getpersonbyid(id",{"_index":469,"title":{},"body":{"controllers/PersonController.html":{},"injectables/PersonService.html":{}}}],["getsimplestring",{"_index":151,"title":{},"body":{"controllers/BooksController.html":{}}}],["getting",{"_index":601,"title":{"index.html":{}},"body":{}}],["grow",{"_index":636,"title":{},"body":{"index.html":{}}}],["here",{"_index":647,"title":{},"body":{"index.html":{}}}],["host",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":357,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["httpexception",{"_index":336,"title":{},"body":{"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoginService.html":{}}}],["httpexception(\"credentials",{"_index":434,"title":{},"body":{"injectables/LoginService.html":{}}}],["httpexception(\"user",{"_index":425,"title":{},"body":{"injectables/LoginService.html":{}}}],["httpexceptionfilter",{"_index":159,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{},"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://nestjs.com",{"_index":654,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":340,"title":{},"body":{"classes/CustomException.html":{},"injectables/LoginService.html":{}}}],["httpstatus.bad_request",{"_index":428,"title":{},"body":{"injectables/LoginService.html":{}}}],["httpstatus.not_found",{"_index":342,"title":{},"body":{"classes/CustomException.html":{}}}],["id",{"_index":83,"title":{},"body":{"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{},"classes/Login.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{}}}],["identifier",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":344,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/BooksUsersModule.html":{},"modules/LoginModule.html":{},"modules/PersonModule.html":{}}}],["index",{"_index":79,"title":{"index.html":{}},"body":{"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"interfaces/SwaggerConfig.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":598,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"interfaces/SwaggerConfig.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["inject",{"_index":173,"title":{},"body":{"controllers/BooksController.html":{},"controllers/PersonController.html":{}}}],["inject(cache_manager",{"_index":189,"title":{},"body":{"controllers/BooksController.html":{},"controllers/PersonController.html":{}}}],["injectable",{"_index":74,"title":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"injectables/LoginService.html":{},"injectables/PersonService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"injectables/LoginService.html":{},"injectables/PersonService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":75,"title":{},"body":{"injectables/AppService.html":{},"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"injectables/LoginService.html":{},"injectables/PersonService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectrepository",{"_index":245,"title":{},"body":{"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"injectables/LoginService.html":{},"injectables/PersonService.html":{}}}],["injectrepository(book",{"_index":249,"title":{},"body":{"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{}}}],["injectrepository(bookusers",{"_index":307,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["injectrepository(login",{"_index":412,"title":{},"body":{"injectables/LoginService.html":{},"injectables/PersonService.html":{}}}],["injectrepository(person",{"_index":308,"title":{},"body":{"injectables/BooksUsersService.html":{},"injectables/PersonService.html":{}}}],["installation",{"_index":615,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":617,"title":{},"body":{"index.html":{}}}],["interface",{"_index":508,"title":{"interfaces/SwaggerConfig.html":{}},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":510,"title":{},"body":{"interfaces/SwaggerConfig.html":{}}}],["isbnnumber",{"_index":84,"title":{},"body":{"classes/Book.html":{},"classes/BookUsers.html":{},"injectables/BooksUsersService.html":{}}}],["isnumber",{"_index":100,"title":{},"body":{"classes/Book.html":{}}}],["isstring",{"_index":101,"title":{},"body":{"classes/Book.html":{}}}],["join",{"_index":643,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":379,"title":{},"body":{"classes/Login.html":{}}}],["jointable",{"_index":136,"title":{},"body":{"classes/BookUsers.html":{}}}],["json",{"_index":363,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["kamil",{"_index":651,"title":{},"body":{"index.html":{}}}],["license",{"_index":657,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":633,"title":{},"body":{"index.html":{}}}],["line",{"_index":500,"title":{},"body":{"injectables/PersonService.html":{}}}],["loadfrom",{"_index":196,"title":{},"body":{"controllers/BooksController.html":{}}}],["localhost",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["logged",{"_index":433,"title":{},"body":{"injectables/LoginService.html":{}}}],["logger",{"_index":231,"title":{},"body":{"injectables/BooksService.html":{}}}],["logger(booksservice.name",{"_index":243,"title":{},"body":{"injectables/BooksService.html":{}}}],["login",{"_index":43,"title":{"classes/Login.html":{}},"body":{"modules/AppModule.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"coverage.html":{}}}],["login,bookusers]),cachemodule.register",{"_index":490,"title":{},"body":{"modules/PersonModule.html":{}}}],["login.controller",{"_index":403,"title":{},"body":{"modules/LoginModule.html":{}}}],["login.emailid",{"_index":414,"title":{},"body":{"injectables/LoginService.html":{},"injectables/PersonService.html":{}}}],["login.password",{"_index":432,"title":{},"body":{"injectables/LoginService.html":{},"injectables/PersonService.html":{}}}],["login.person",{"_index":420,"title":{},"body":{"injectables/LoginService.html":{},"classes/Person.html":{},"injectables/PersonService.html":{}}}],["login.service",{"_index":390,"title":{},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{}}}],["login/entity/login.entity",{"_index":488,"title":{},"body":{"modules/PersonModule.html":{}}}],["login/login.module",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["logincontroller",{"_index":381,"title":{"controllers/LoginController.html":{}},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{},"coverage.html":{}}}],["loginmodule",{"_index":30,"title":{"modules/LoginModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules.html":{},"overview.html":{}}}],["loginrepository",{"_index":408,"title":{},"body":{"injectables/LoginService.html":{},"injectables/PersonService.html":{}}}],["loginresult",{"_index":423,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginresult.emailid",{"_index":430,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginresult.password",{"_index":431,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginservice",{"_index":389,"title":{"injectables/LoginService.html":{}},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"coverage.html":{},"overview.html":{}}}],["loginuser",{"_index":394,"title":{},"body":{"controllers/LoginController.html":{}}}],["manager",{"_index":183,"title":{},"body":{"controllers/BooksController.html":{},"controllers/PersonController.html":{},"dependencies.html":{}}}],["manytomany",{"_index":135,"title":{},"body":{"classes/BookUsers.html":{}}}],["manytomany(undefined",{"_index":120,"title":{},"body":{"classes/BookUsers.html":{}}}],["matching",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"interfaces/SwaggerConfig.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":582,"title":{},"body":{"dependencies.html":{}}}],["metatype",{"_index":526,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["methods",{"_index":111,"title":{},"body":{"classes/BookUsers.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["mgmnt",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":593,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":632,"title":{},"body":{"index.html":{}}}],["mode",{"_index":622,"title":{},"body":{"index.html":{}}}],["module",{"_index":21,"title":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/BooksUsersModule.html":{},"modules/LoginModule.html":{},"modules/PersonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/BooksUsersModule.html":{},"modules/LoginModule.html":{},"modules/PersonModule.html":{}}}],["modules",{"_index":23,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/BooksUsersModule.html":{},"modules/LoginModule.html":{},"modules/PersonModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":646,"title":{},"body":{"index.html":{}}}],["mysql",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":579,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":652,"title":{},"body":{"index.html":{}}}],["name",{"_index":131,"title":{},"body":{"classes/BookUsers.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":612,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":656,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":99,"title":{},"body":{"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"dependencies.html":{}}}],["new",{"_index":141,"title":{},"body":{"classes/BookUsers.html":{},"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"classes/HttpExceptionFilter.html":{},"injectables/LoginService.html":{},"injectables/PersonService.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["next",{"_index":499,"title":{},"body":{"injectables/PersonService.html":{}}}],["node.js",{"_index":604,"title":{},"body":{"index.html":{}}}],["noofpages",{"_index":85,"title":{},"body":{"classes/Book.html":{}}}],["normal",{"_index":477,"title":{},"body":{"controllers/PersonController.html":{}}}],["npm",{"_index":616,"title":{},"body":{"index.html":{}}}],["null",{"_index":140,"title":{},"body":{"classes/BookUsers.html":{},"injectables/BooksService.html":{}}}],["number",{"_index":92,"title":{},"body":{"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{},"classes/Login.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"injectables/ValidationPipe.html":{}}}],["obj",{"_index":417,"title":{},"body":{"injectables/LoginService.html":{}}}],["object",{"_index":535,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["onetomany",{"_index":459,"title":{},"body":{"classes/Person.html":{}}}],["onetomany(undefined",{"_index":448,"title":{},"body":{"classes/Person.html":{}}}],["onetoone",{"_index":378,"title":{},"body":{"classes/Login.html":{},"classes/Person.html":{}}}],["onetoone(undefined",{"_index":375,"title":{},"body":{"classes/Login.html":{},"classes/Person.html":{}}}],["onupdate",{"_index":124,"title":{},"body":{"classes/BookUsers.html":{}}}],["open",{"_index":634,"title":{},"body":{"index.html":{}}}],["openapiobject",{"_index":600,"title":{},"body":{"miscellaneous/functions.html":{}}}],["opertaions",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":132,"title":{},"body":{"classes/BookUsers.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/BooksUsersModule.html":{},"modules/LoginModule.html":{},"modules/PersonModule.html":{},"overview.html":{}}}],["overview",{"_index":661,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p1",{"_index":315,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["p1.addperson(personresult",{"_index":323,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["p1.bookname",{"_index":328,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["p1.date",{"_index":318,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["p1.emailid",{"_index":322,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["p1.isbnnumber",{"_index":316,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["p1.reviewcomments",{"_index":320,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["package",{"_index":568,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":174,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{},"controllers/PersonController.html":{}}}],["parameters",{"_index":130,"title":{},"body":{"classes/BookUsers.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"classes/Login.html":{},"classes/Person.html":{}}}],["path",{"_index":367,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["person",{"_index":41,"title":{"classes/Person.html":{}},"body":{"modules/AppModule.html":{},"classes/BookUsers.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"classes/Login.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"coverage.html":{}}}],["person.bookuser",{"_index":137,"title":{},"body":{"classes/BookUsers.html":{}}}],["person.controller",{"_index":487,"title":{},"body":{"modules/PersonModule.html":{}}}],["person.emailid",{"_index":502,"title":{},"body":{"injectables/PersonService.html":{}}}],["person.login",{"_index":380,"title":{},"body":{"classes/Login.html":{}}}],["person.password",{"_index":503,"title":{},"body":{"injectables/PersonService.html":{}}}],["person.service",{"_index":472,"title":{},"body":{"controllers/PersonController.html":{},"modules/PersonModule.html":{}}}],["person/person.module",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["person1",{"_index":504,"title":{},"body":{"injectables/PersonService.html":{}}}],["person[0",{"_index":421,"title":{},"body":{"injectables/LoginService.html":{}}}],["person[0].emailid",{"_index":418,"title":{},"body":{"injectables/LoginService.html":{}}}],["person[0].id",{"_index":419,"title":{},"body":{"injectables/LoginService.html":{}}}],["personcontroller",{"_index":461,"title":{"controllers/PersonController.html":{}},"body":{"controllers/PersonController.html":{},"modules/PersonModule.html":{},"coverage.html":{}}}],["personmodule",{"_index":31,"title":{"modules/PersonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PersonModule.html":{},"modules.html":{},"overview.html":{}}}],["personrepository",{"_index":298,"title":{},"body":{"injectables/BooksUsersService.html":{},"injectables/PersonService.html":{}}}],["personresu;t",{"_index":314,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["personresult",{"_index":309,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["personservice",{"_index":471,"title":{"injectables/PersonService.html":{}},"body":{"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"coverage.html":{},"overview.html":{}}}],["phonenum",{"_index":443,"title":{},"body":{"classes/Person.html":{}}}],["pincode",{"_index":444,"title":{},"body":{"classes/Person.html":{}}}],["pipetransform",{"_index":530,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":532,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":536,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["please",{"_index":644,"title":{},"body":{"index.html":{}}}],["port",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":154,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{},"controllers/LoginController.html":{},"controllers/PersonController.html":{}}}],["prefer",{"_index":501,"title":{},"body":{"injectables/PersonService.html":{}}}],["prefix",{"_index":147,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{},"controllers/LoginController.html":{},"controllers/PersonController.html":{}}}],["prettier/prettier",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{}}}],["primarygeneratedcolumn",{"_index":93,"title":{},"body":{"classes/Book.html":{},"classes/BookUsers.html":{},"classes/Login.html":{},"classes/Person.html":{}}}],["private",{"_index":190,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"injectables/LoginService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"injectables/ValidationPipe.html":{}}}],["production",{"_index":624,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":603,"title":{},"body":{"index.html":{}}}],["project",{"_index":635,"title":{},"body":{"index.html":{}}}],["promise",{"_index":134,"title":{},"body":{"classes/BookUsers.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{}}}],["properties",{"_index":80,"title":{},"body":{"classes/Book.html":{},"classes/BookUsers.html":{},"injectables/BooksService.html":{},"classes/Login.html":{},"classes/Person.html":{},"interfaces/SwaggerConfig.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/BooksUsersModule.html":{},"modules/LoginModule.html":{},"modules/PersonModule.html":{}}}],["put",{"_index":175,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{}}}],["put('/:id",{"_index":222,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{}}}],["put('/:id')@usefilters(new",{"_index":167,"title":{},"body":{"controllers/BooksController.html":{}}}],["read",{"_index":645,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"controllers/LoginController.html":{},"controllers/PersonController.html":{}}}],["redis",{"_index":197,"title":{},"body":{"controllers/BooksController.html":{},"dependencies.html":{}}}],["reflect",{"_index":581,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":234,"title":{},"body":{"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"injectables/LoginService.html":{},"injectables/PersonService.html":{},"index.html":{}}}],["request",{"_index":352,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["request.url",{"_index":368,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["reset",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/BooksUsersModule.html":{},"modules/LoginModule.html":{},"modules/PersonModule.html":{},"overview.html":{}}}],["response",{"_index":353,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["result",{"_index":208,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"injectables/LoginService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{}}}],["result.affected",{"_index":259,"title":{},"body":{"injectables/BooksService.html":{}}}],["results",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"interfaces/SwaggerConfig.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":144,"title":{},"body":{"classes/BookUsers.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"injectables/ValidationPipe.html":{}}}],["returns",{"_index":133,"title":{},"body":{"classes/BookUsers.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["reviewcomments",{"_index":110,"title":{},"body":{"classes/BookUsers.html":{}}}],["rimraf",{"_index":584,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":619,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":586,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":608,"title":{},"body":{"index.html":{}}}],["scope",{"_index":244,"title":{},"body":{"injectables/BooksService.html":{}}}],["scope.transient",{"_index":248,"title":{},"body":{"injectables/BooksService.html":{}}}],["server",{"_index":609,"title":{},"body":{"index.html":{}}}],["side",{"_index":610,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"modules/BooksModule.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{},"injectables/PersonService.html":{},"interfaces/SwaggerConfig.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"index.html":{}}}],["sponsors",{"_index":638,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":595,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.config.ts",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":596,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":76,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/books",{"_index":106,"title":{},"body":{"classes/BookUsers.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"modules/PersonModule.html":{},"coverage.html":{}}}],["src/books/books.controller.ts",{"_index":146,"title":{},"body":{"controllers/BooksController.html":{},"coverage.html":{}}}],["src/books/books.controller.ts:17",{"_index":164,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:34",{"_index":163,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:43",{"_index":155,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:50",{"_index":160,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.controller.ts:56",{"_index":168,"title":{},"body":{"controllers/BooksController.html":{}}}],["src/books/books.module.ts",{"_index":227,"title":{},"body":{"modules/BooksModule.html":{}}}],["src/books/books.service.ts",{"_index":230,"title":{},"body":{"injectables/BooksService.html":{},"coverage.html":{}}}],["src/books/books.service.ts:11",{"_index":235,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:20",{"_index":238,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:32",{"_index":240,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:44",{"_index":239,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/books.service.ts:54",{"_index":241,"title":{},"body":{"injectables/BooksService.html":{}}}],["src/books/entity/books.entity.ts",{"_index":78,"title":{},"body":{"classes/Book.html":{},"coverage.html":{}}}],["src/books/entity/books.entity.ts:10",{"_index":94,"title":{},"body":{"classes/Book.html":{}}}],["src/books/entity/books.entity.ts:15",{"_index":91,"title":{},"body":{"classes/Book.html":{}}}],["src/books/entity/books.entity.ts:20",{"_index":90,"title":{},"body":{"classes/Book.html":{}}}],["src/books/entity/books.entity.ts:25",{"_index":96,"title":{},"body":{"classes/Book.html":{}}}],["src/books/entity/books.entity.ts:30",{"_index":97,"title":{},"body":{"classes/Book.html":{}}}],["src/filter/customexception.exception",{"_index":411,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/filter/customexception.exception.ts",{"_index":334,"title":{},"body":{"classes/CustomException.html":{},"coverage.html":{}}}],["src/filter/customexception.exception.ts:4",{"_index":338,"title":{},"body":{"classes/CustomException.html":{}}}],["src/filter/httpexceptionfilter",{"_index":181,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{}}}],["src/filter/httpexceptionfilter.ts",{"_index":343,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/filter/httpexceptionfilter.ts:7",{"_index":349,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["src/filter/validationexceptionfilter.ts",{"_index":517,"title":{},"body":{"classes/ValidationExceptionFilter.html":{},"coverage.html":{}}}],["src/filter/validationexceptionfilter.ts:7",{"_index":518,"title":{},"body":{"classes/ValidationExceptionFilter.html":{}}}],["src/login/entity/login.entity",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"injectables/PersonService.html":{}}}],["src/login/entity/login.entity.ts",{"_index":371,"title":{},"body":{"classes/Login.html":{},"coverage.html":{}}}],["src/login/entity/login.entity.ts:10",{"_index":373,"title":{},"body":{"classes/Login.html":{}}}],["src/login/entity/login.entity.ts:14",{"_index":372,"title":{},"body":{"classes/Login.html":{}}}],["src/login/entity/login.entity.ts:18",{"_index":374,"title":{},"body":{"classes/Login.html":{}}}],["src/login/entity/login.entity.ts:24",{"_index":377,"title":{},"body":{"classes/Login.html":{}}}],["src/login/login.controller.ts",{"_index":382,"title":{},"body":{"controllers/LoginController.html":{},"coverage.html":{}}}],["src/login/login.controller.ts:18",{"_index":388,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/login/login.controller.ts:22",{"_index":386,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/login/login.module.ts",{"_index":402,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/login/login.service.ts",{"_index":405,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/login/login.service.ts:10",{"_index":407,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/login.service.ts:24",{"_index":410,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/login/login.service.ts:39",{"_index":409,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/main.ts",{"_index":557,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/person/entity/person.entity",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"classes/BookUsers.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"classes/Login.html":{},"controllers/PersonController.html":{},"modules/PersonModule.html":{}}}],["src/person/entity/person.entity.ts",{"_index":439,"title":{},"body":{"classes/Person.html":{},"coverage.html":{}}}],["src/person/entity/person.entity.ts:10",{"_index":452,"title":{},"body":{"classes/Person.html":{}}}],["src/person/entity/person.entity.ts:14",{"_index":458,"title":{},"body":{"classes/Person.html":{}}}],["src/person/entity/person.entity.ts:18",{"_index":454,"title":{},"body":{"classes/Person.html":{}}}],["src/person/entity/person.entity.ts:22",{"_index":455,"title":{},"body":{"classes/Person.html":{}}}],["src/person/entity/person.entity.ts:26",{"_index":451,"title":{},"body":{"classes/Person.html":{}}}],["src/person/entity/person.entity.ts:30",{"_index":450,"title":{},"body":{"classes/Person.html":{}}}],["src/person/entity/person.entity.ts:34",{"_index":457,"title":{},"body":{"classes/Person.html":{}}}],["src/person/entity/person.entity.ts:38",{"_index":456,"title":{},"body":{"classes/Person.html":{}}}],["src/person/entity/person.entity.ts:42",{"_index":446,"title":{},"body":{"classes/Person.html":{}}}],["src/person/entity/person.entity.ts:46",{"_index":447,"title":{},"body":{"classes/Person.html":{}}}],["src/person/entity/person.entity.ts:49",{"_index":453,"title":{},"body":{"classes/Person.html":{}}}],["src/person/entity/person.entity.ts:52",{"_index":449,"title":{},"body":{"classes/Person.html":{}}}],["src/person/person.controller.ts",{"_index":462,"title":{},"body":{"controllers/PersonController.html":{},"coverage.html":{}}}],["src/person/person.controller.ts:15",{"_index":467,"title":{},"body":{"controllers/PersonController.html":{}}}],["src/person/person.controller.ts:20",{"_index":468,"title":{},"body":{"controllers/PersonController.html":{}}}],["src/person/person.controller.ts:38",{"_index":470,"title":{},"body":{"controllers/PersonController.html":{}}}],["src/person/person.module.ts",{"_index":486,"title":{},"body":{"modules/PersonModule.html":{}}}],["src/person/person.service.ts",{"_index":491,"title":{},"body":{"injectables/PersonService.html":{},"coverage.html":{}}}],["src/person/person.service.ts:10",{"_index":493,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/person/person.service.ts:18",{"_index":494,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/person/person.service.ts:29",{"_index":495,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/person/person.service.ts:33",{"_index":496,"title":{},"body":{"injectables/PersonService.html":{}}}],["src/pipes/validationpipes.ts",{"_index":521,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/pipes/validationpipes.ts:20",{"_index":525,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/pipes/validationpipes.ts:8",{"_index":529,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/swagger/swagger.config.ts",{"_index":561,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/swagger/swagger.interface.ts",{"_index":511,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{}}}],["src/swagger/swagger.ts",{"_index":564,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":620,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":623,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":625,"title":{},"body":{"index.html":{}}}],["started",{"_index":602,"title":{"index.html":{}},"body":{}}],["starter",{"_index":614,"title":{},"body":{"index.html":{}}}],["state",{"_index":445,"title":{},"body":{"classes/Person.html":{}}}],["statements",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":360,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["status(status",{"_index":362,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["statuscode",{"_index":364,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["stay",{"_index":648,"title":{},"body":{"index.html":{}}}],["store",{"_index":575,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":86,"title":{},"body":{"classes/Book.html":{},"classes/BookUsers.html":{},"classes/CustomException.html":{},"classes/Login.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"interfaces/SwaggerConfig.html":{},"injectables/ValidationPipe.html":{}}}],["succesfully",{"_index":262,"title":{},"body":{"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"injectables/LoginService.html":{}}}],["super(e",{"_index":341,"title":{},"body":{"classes/CustomException.html":{}}}],["support",{"_index":639,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":659,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":588,"title":{},"body":{"dependencies.html":{}}}],["swagger_config",{"_index":563,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggerconfig",{"_index":509,"title":{"interfaces/SwaggerConfig.html":{}},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["table",{"_index":567,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":566,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":513,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":628,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":631,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":630,"title":{},"body":{"index.html":{}}}],["tests",{"_index":627,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":637,"title":{},"body":{"index.html":{}}}],["this.bookrepository.delete(id",{"_index":258,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.bookrepository.findone",{"_index":325,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["this.bookrepository.findone(id",{"_index":256,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.bookrepository.save(book",{"_index":250,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.bookrepository.update(id",{"_index":263,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.bookservice.addbookdetails(user",{"_index":218,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.bookservice.addbookuserdetails(user",{"_index":285,"title":{},"body":{"controllers/BooksUsersController.html":{}}}],["this.bookservice.deletebookbyid(id",{"_index":221,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.bookservice.deletebookuserbyid(id",{"_index":287,"title":{},"body":{"controllers/BooksUsersController.html":{}}}],["this.bookservice.getbookbyid(id",{"_index":209,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.bookservice.getbookuserbyid(id",{"_index":283,"title":{},"body":{"controllers/BooksUsersController.html":{}}}],["this.bookservice.updatebookbyid(id",{"_index":224,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.bookservice.updatebookuserbyid(id",{"_index":289,"title":{},"body":{"controllers/BooksUsersController.html":{}}}],["this.bookuserrepository.delete(id",{"_index":331,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["this.bookuserrepository.findone(id",{"_index":330,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["this.bookuserrepository.save(p1",{"_index":329,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["this.bookuserrepository.update(id",{"_index":332,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["this.cachemanager.get(\"key",{"_index":212,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.cachemanager.get('getallpersondetails')).values",{"_index":480,"title":{},"body":{"controllers/PersonController.html":{}}}],["this.cachemanager.get('sval",{"_index":194,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.cachemanager.set('getallpersondetails",{"_index":479,"title":{},"body":{"controllers/PersonController.html":{}}}],["this.cachemanager.set('key",{"_index":210,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.cachemanager.set('sval",{"_index":198,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.fakevalue",{"_index":199,"title":{},"body":{"controllers/BooksController.html":{}}}],["this.logger.error(\"book",{"_index":254,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.logger.log(\"book",{"_index":251,"title":{},"body":{"injectables/BooksService.html":{}}}],["this.loginrepository.find",{"_index":436,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginrepository.findone",{"_index":424,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginrepository.save(login",{"_index":422,"title":{},"body":{"injectables/LoginService.html":{},"injectables/PersonService.html":{}}}],["this.loginservice.addlogindetails(loginuser",{"_index":395,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.loginservice.getalllogindetails",{"_index":399,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.loginservice.validatelogincredentials(login",{"_index":397,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.person",{"_index":139,"title":{},"body":{"classes/BookUsers.html":{}}}],["this.person.push(person",{"_index":143,"title":{},"body":{"classes/BookUsers.html":{}}}],["this.personrepository.find",{"_index":415,"title":{},"body":{"injectables/LoginService.html":{},"injectables/PersonService.html":{}}}],["this.personrepository.findone",{"_index":310,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["this.personrepository.findone(id",{"_index":506,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.personrepository.save(person",{"_index":505,"title":{},"body":{"injectables/PersonService.html":{}}}],["this.personservice.addpersondetails(person",{"_index":476,"title":{},"body":{"controllers/PersonController.html":{}}}],["this.personservice.getallpersondetails",{"_index":478,"title":{},"body":{"controllers/PersonController.html":{}}}],["this.personservice.getpersonbyid(id",{"_index":483,"title":{},"body":{"controllers/PersonController.html":{}}}],["this.tovalidate(metatype",{"_index":534,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["throw",{"_index":255,"title":{},"body":{"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"injectables/LoginService.html":{},"injectables/PersonService.html":{},"injectables/ValidationPipe.html":{}}}],["timestamp",{"_index":365,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["title",{"_index":514,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":649,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":522,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":524,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform",{"_index":523,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":527,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":533,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["true",{"_index":123,"title":{},"body":{"classes/BookUsers.html":{},"classes/Login.html":{}}}],["true,onupdate:\"cascade",{"_index":138,"title":{},"body":{"classes/BookUsers.html":{}}}],["true})@joincolumn",{"_index":376,"title":{},"body":{"classes/Login.html":{}}}],["ttl",{"_index":200,"title":{},"body":{"controllers/BooksController.html":{},"controllers/PersonController.html":{}}}],["twitter",{"_index":655,"title":{},"body":{"index.html":{}}}],["type",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"classes/Book.html":{},"classes/BookUsers.html":{},"controllers/BooksController.html":{},"injectables/BooksService.html":{},"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{},"classes/CustomException.html":{},"classes/HttpExceptionFilter.html":{},"classes/Login.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"controllers/PersonController.html":{},"injectables/PersonService.html":{},"interfaces/SwaggerConfig.html":{},"classes/ValidationExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":105,"title":{},"body":{"classes/Book.html":{},"classes/BookUsers.html":{},"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{},"classes/Login.html":{},"injectables/LoginService.html":{},"classes/Person.html":{},"injectables/PersonService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/BooksUsersModule.html":{},"modules/LoginModule.html":{},"modules/PersonModule.html":{}}}],["typeormmodule.forfeature([book]),cachemodule.register",{"_index":229,"title":{},"body":{"modules/BooksModule.html":{}}}],["typeormmodule.forfeature([bookusers",{"_index":295,"title":{},"body":{"modules/BooksUsersModule.html":{}}}],["typeormmodule.forfeature([login",{"_index":404,"title":{},"body":{"modules/LoginModule.html":{}}}],["typeormmodule.forfeature([person",{"_index":489,"title":{},"body":{"modules/PersonModule.html":{}}}],["typeormmodule.forroot",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":543,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.includes(metatype",{"_index":544,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["typescript",{"_index":613,"title":{},"body":{"index.html":{}}}],["ui",{"_index":590,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":121,"title":{},"body":{"classes/BookUsers.html":{},"classes/Login.html":{},"classes/Person.html":{},"injectables/ValidationPipe.html":{}}}],["unit",{"_index":626,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":165,"title":{},"body":{"controllers/BooksController.html":{},"injectables/ValidationPipe.html":{}}}],["updatebookbyid",{"_index":152,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["updatebookbyid(@param('id",{"_index":223,"title":{},"body":{"controllers/BooksController.html":{}}}],["updatebookbyid(id",{"_index":166,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{}}}],["updatebookuserbyid",{"_index":271,"title":{},"body":{"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{}}}],["updatebookuserbyid(@param('id",{"_index":288,"title":{},"body":{"controllers/BooksUsersController.html":{}}}],["updatebookuserbyid(id",{"_index":278,"title":{},"body":{"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{}}}],["updated",{"_index":264,"title":{},"body":{"injectables/BooksService.html":{},"injectables/BooksUsersService.html":{}}}],["usefilters",{"_index":176,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{}}}],["usefilters(new",{"_index":205,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{}}}],["usepipes(new",{"_index":213,"title":{},"body":{"controllers/BooksController.html":{}}}],["user",{"_index":156,"title":{},"body":{"controllers/BooksController.html":{},"controllers/BooksUsersController.html":{}}}],["username",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"classes/Person.html":{}}}],["users",{"_index":267,"title":{},"body":{"controllers/BooksUsersController.html":{}}}],["users.controller",{"_index":293,"title":{},"body":{"modules/BooksUsersModule.html":{}}}],["users.controller.ts",{"_index":266,"title":{},"body":{"controllers/BooksUsersController.html":{},"coverage.html":{}}}],["users.controller.ts:15",{"_index":277,"title":{},"body":{"controllers/BooksUsersController.html":{}}}],["users.controller.ts:20",{"_index":273,"title":{},"body":{"controllers/BooksUsersController.html":{}}}],["users.controller.ts:25",{"_index":275,"title":{},"body":{"controllers/BooksUsersController.html":{}}}],["users.controller.ts:30",{"_index":279,"title":{},"body":{"controllers/BooksUsersController.html":{}}}],["users.entity",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"classes/Person.html":{},"modules/PersonModule.html":{}}}],["users.entity.ts",{"_index":107,"title":{},"body":{"classes/BookUsers.html":{},"coverage.html":{}}}],["users.entity.ts:11",{"_index":118,"title":{},"body":{"classes/BookUsers.html":{}}}],["users.entity.ts:15",{"_index":117,"title":{},"body":{"classes/BookUsers.html":{}}}],["users.entity.ts:19",{"_index":119,"title":{},"body":{"classes/BookUsers.html":{}}}],["users.entity.ts:22",{"_index":114,"title":{},"body":{"classes/BookUsers.html":{}}}],["users.entity.ts:26",{"_index":116,"title":{},"body":{"classes/BookUsers.html":{}}}],["users.entity.ts:30",{"_index":127,"title":{},"body":{"classes/BookUsers.html":{}}}],["users.entity.ts:36",{"_index":126,"title":{},"body":{"classes/BookUsers.html":{}}}],["users.entity.ts:38",{"_index":129,"title":{},"body":{"classes/BookUsers.html":{}}}],["users.module",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["users.module.ts",{"_index":292,"title":{},"body":{"modules/BooksUsersModule.html":{}}}],["users.service",{"_index":281,"title":{},"body":{"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{}}}],["users.service.ts",{"_index":296,"title":{},"body":{"injectables/BooksUsersService.html":{},"coverage.html":{}}}],["users.service.ts:11",{"_index":299,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["users.service.ts:21",{"_index":302,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["users.service.ts:42",{"_index":305,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["users.service.ts:52",{"_index":304,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["users.service.ts:62",{"_index":306,"title":{},"body":{"injectables/BooksUsersService.html":{}}}],["users/books",{"_index":51,"title":{},"body":{"modules/AppModule.html":{},"controllers/BooksUsersController.html":{},"modules/BooksUsersModule.html":{},"injectables/BooksUsersService.html":{},"coverage.html":{}}}],["users/entity/books",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"classes/BookUsers.html":{},"controllers/BooksUsersController.html":{},"injectables/BooksUsersService.html":{},"classes/Person.html":{},"modules/PersonModule.html":{},"coverage.html":{}}}],["v",{"_index":187,"title":{},"body":{"controllers/BooksController.html":{}}}],["validate",{"_index":531,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":538,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validatelogincredentials",{"_index":384,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["validatelogincredentials(@body",{"_index":396,"title":{},"body":{"controllers/LoginController.html":{}}}],["validatelogincredentials(login",{"_index":387,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["validationexceptionfilter",{"_index":516,"title":{"classes/ValidationExceptionFilter.html":{}},"body":{"classes/ValidationExceptionFilter.html":{},"coverage.html":{}}}],["validationpipe",{"_index":214,"title":{"injectables/ValidationPipe.html":{}},"body":{"controllers/BooksController.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":102,"title":{},"body":{"classes/Book.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":192,"title":{},"body":{"controllers/BooksController.html":{},"injectables/BooksService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":169,"title":{},"body":{"controllers/BooksController.html":{}}}],["variable",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":665,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":515,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":351,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/ValidationExceptionFilter.html":{}}}],["watch",{"_index":621,"title":{},"body":{"index.html":{}}}],["website",{"_index":653,"title":{},"body":{"index.html":{}}}],["wrong",{"_index":435,"title":{},"body":{"injectables/LoginService.html":{}}}],["you'd",{"_index":642,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"modules/BooksModule.html":{},"modules/BooksUsersModule.html":{},"modules/LoginModule.html":{},"modules/PersonModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Controller } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nBooksModule\n\nBooksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nBooksUsersModule\n\nBooksUsersModule\n\nAppModule -->\n\nBooksUsersModule->AppModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nPersonModule\n\nPersonModule\n\nAppModule -->\n\nPersonModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BooksModule\n                        \n                        \n                            BooksUsersModule\n                        \n                        \n                            LoginModule\n                        \n                        \n                            PersonModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { Person } from 'src/person/entity/person.entity';\nimport { Login } from 'src/login/entity/login.entity';\nimport { LoginModule } from './login/login.module';\nimport { PersonModule } from './person/person.module';\nimport { Book } from './books/entity/books.entity';\nimport { BooksModule } from './books/books.module';\nimport { BooksUsersModule } from './books-users/books-users.module';\nimport { BookUsers } from './books-users/entity/books-users.entity';\n import { CacheModule } from '@nestjs/common';\n\n@Module({\n  imports: [\n\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: 'localhost',\n      port: 3306,\n      username: 'root',\n      password: 'Chelli1@',\n      database: 'bookMgmnt',\n      entities: [Person, Login, Book, BookUsers],\n      synchronize: false,\n\n    }), PersonModule, LoginModule, BooksModule, BooksUsersModule,CacheModule.register()],\n  controllers: [AppController],\n  providers: [AppService]\n})\nexport class AppModule { }\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Book.html":{"url":"classes/Book.html","title":"class - Book","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Book\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/entity/books.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bookAuthor\n                            \n                            \n                                bookName\n                            \n                            \n                                id\n                            \n                            \n                                ISBNNumber\n                            \n                            \n                                noOfPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bookAuthor\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/entity/books.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bookName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/entity/books.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/entity/books.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ISBNNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/entity/books.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noOfPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books/entity/books.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNumber, IsString } from 'class-validator';\nimport { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';\n\n@Entity()\nexport class Book {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    @ApiProperty()\n    @IsString()\n    bookName: string;\n\n    @Column()\n    @ApiProperty()\n    @IsString()\n    bookAuthor: string;\n\n    @Column()\n    @ApiProperty()\n    @IsNumber()\n    ISBNNumber: number;\n\n    @Column()\n    @ApiProperty()\n    @IsNumber()\n    noOfPages: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BookUsers.html":{"url":"classes/BookUsers.html","title":"class - BookUsers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BookUsers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books-users/entity/books-users.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bookName\n                            \n                            \n                                date\n                            \n                            \n                                emailId\n                            \n                            \n                                id\n                            \n                            \n                                ISBNNumber\n                            \n                            \n                                person\n                            \n                            \n                                reviewComments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addPerson\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        bookName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books-users/entity/books-users.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books-users/entity/books-users.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books-users/entity/books-users.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books-users/entity/books-users.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ISBNNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books-users/entity/books-users.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Person[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, undefined, {cascade: true, onUpdate: 'CASCADE'})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books-users/entity/books-users.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reviewComments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/books-users/entity/books-users.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addPerson\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPerson(person: Person)\n                \n            \n\n\n            \n                \n                    Defined in src/books-users/entity/books-users.entity.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    person\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, PrimaryGeneratedColumn, Column, ManyToMany } from 'typeorm';\nimport { Person } from 'src/person/entity/person.entity';\nimport { JoinTable } from 'typeorm';\n\n@Entity()\nexport class BookUsers {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    @ApiProperty()\n    emailId: string;\n\n    @Column()\n    @ApiProperty()\n    ISBNNumber: number;\n\n    @Column()\n    bookName: string;\n\n    @Column()\n    @ApiProperty()\n    date: string;\n\n    @Column()\n    @ApiProperty()\n    reviewComments: string;\n\n    @ManyToMany(() => Person, person => person.bookuser, {\n        cascade: true,onUpdate:\"CASCADE\"\n    })\n    @JoinTable()\n    person: Person[];\n\n    async addPerson(person: Person): Promise {\n        if (this.person == null) {\n            this.person = new Array();\n        }\n        this.person.push(person);\n        return person;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BooksController.html":{"url":"controllers/BooksController.html","title":"controller - BooksController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BooksController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addBookDetails\n                            \n                            \n                                deleteBookById\n                            \n                            \n                                getBookById\n                            \n                            \n                                    Async\n                                getSimpleString\n                            \n                            \n                                UpdateBookByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addBookDetails\n                        \n                    \n                \n            \n            \n                \naddBookDetails(user: Book)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                Book\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBookById\n                        \n                    \n                \n            \n            \n                \ndeleteBookById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')@UseFilters(new HttpExceptionFilter())\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookById\n                        \n                    \n                \n            \n            \n                \ngetBookById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@UseFilters(new HttpExceptionFilter())\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSimpleString\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSimpleString()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateBookByID\n                        \n                    \n                \n            \n            \n                \nUpdateBookByID(id: number, user: Book)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')@UseFilters(new HttpExceptionFilter())\n                \n            \n\n            \n                \n                    Defined in src/books/books.controller.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                Book\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable no-var */\n/* eslint-disable prettier/prettier */\nimport { Body, CACHE_MANAGER, Controller, Delete, Get, Inject, Param, Post, Put, UseFilters } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { BooksService } from './books.service';\nimport { Book } from './entity/books.entity';\nimport { HttpExceptionFilter } from 'src/filter/HttpExceptionFilter';\nimport { Cache } from 'cache-manager';\n\n@Controller('books')\n@ApiTags('books')\nexport class BooksController {\n    fakeValue = \"my name is V\";\n    constructor(private readonly bookService: BooksService,\n        @Inject(CACHE_MANAGER) private cacheManager: Cache) { }\n    @Get()\n    async getSimpleString() {\n        var value = await this.cacheManager.get('sVal');\n        if (value) {\n            return {\n                data: value,\n                LoadFrom: 'redis Cache'\n            }\n        }\n        await this.cacheManager.set('sVal', this.fakeValue, { ttl: 300 });\n        return {\n            data: this.fakeValue,\n            LoadFrom: 'fake dB'\n        }\n    }\n\n    @Get('/:id')\n    @UseFilters(new HttpExceptionFilter())\n    getBookById(@Param('id') id: number): Promise {\n        const result = this.bookService.getBookById(id);\n        this.cacheManager.set('key', result);\n        // const cacheResult = this.cacheManager.get(\"key\");\n        return result;\n    }\n\n    @Post()\n    // @UsePipes(new ValidationPipe())\n    addBookDetails(@Body() user: Book): Promise {\n        console.log('from add user');\n        return this.bookService.addBookDetails(user);\n    }\n\n    @Delete('/:id')\n    @UseFilters(new HttpExceptionFilter())\n    deleteBookById(@Param('id') id: number): Promise {\n        return this.bookService.deleteBookById(id);\n    }\n\n    @Put('/:id')\n    @UseFilters(new HttpExceptionFilter())\n    UpdateBookByID(@Param('id') id: number, @Body() user: Book): Promise {\n        return this.bookService.UpdateBookByID(id, user);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BooksModule.html":{"url":"modules/BooksModule.html","title":"module - BooksModule","body":"\n                   \n\n\n\n\n    Modules\n    BooksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_providers\n\n\n\n\nBooksService\n\nBooksService\n\n\n\nBooksModule\n\nBooksModule\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/books/books.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BooksService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BooksController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { CacheModule, Module } from '@nestjs/common';\nimport { Book } from './entity/books.entity';\nimport { BooksController } from './books.controller';\nimport { BooksService } from './books.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\n@Module({\n    imports: [TypeOrmModule.forFeature([Book]),CacheModule.register()],\n    controllers: [BooksController],\n    providers: [BooksService],\n})\nexport class BooksModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BooksService.html":{"url":"injectables/BooksService.html","title":"injectable - BooksService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BooksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books/books.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addBookDetails\n                            \n                            \n                                    Async\n                                deleteBookById\n                            \n                            \n                                    Async\n                                getBookById\n                            \n                            \n                                    Async\n                                UpdateBookByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/books/books.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addBookDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    addBookDetails(book: Book)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    book\n                                    \n                                                Book\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteBookById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBookById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBookById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBookById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateBookByID\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateBookByID(id: number, book: Book)\n                \n            \n\n\n            \n                \n                    Defined in src/books/books.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    book\n                                    \n                                                Book\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(BooksService.name)\n                    \n                \n                    \n                        \n                                Defined in src/books/books.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, Scope } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Book } from './entity/books.entity';\nimport { BadRequestException } from '@nestjs/common';\nimport { ForbiddenException } from '@nestjs/common';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class BooksService {\n    private readonly logger = new Logger(BooksService.name);\n    \n\n    constructor(\n        @InjectRepository(Book)\n        private bookRepository: Repository,\n    \n    ) { }\n\n    async addBookDetails(book: Book): Promise {\n        const result = await this.bookRepository.save(book);\n        if (result) {\n            this.logger.log(\"book details added\")\n            return result;\n        }\n        else {\n            this.logger.error(\"book details not added\")\n            throw new ForbiddenException();\n        }\n    }\n\n    async getBookById(id: number): Promise {\n        const result = await this.bookRepository.findOne(id);\n        if (result) {\n            this.logger.log(\"book details are as following\")\n            return result;\n        }\n        else {\n            this.logger.error(\"book details are null\")\n            throw new BadRequestException();\n        }\n    }\n\n    async deleteBookById(id: number): Promise {\n        const result = await this.bookRepository.delete(id);\n        if (result.affected == 1) {\n            return 'Book Details Deleted Succesfully';\n        }\n        else {\n            throw new ForbiddenException();\n        }\n    }\n\n    async UpdateBookByID(id: number, book: Book): Promise {\n        const result = await this.bookRepository.update(id, book);\n        if (result.affected == 1) {\n            return 'Book Details updated Succesfully';\n        }\n        else {\n            throw new ForbiddenException();\n        }\n    }\n\n}\n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BooksUsersController.html":{"url":"controllers/BooksUsersController.html","title":"controller - BooksUsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BooksUsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books-users/books-users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                books-users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addBookUserDetails\n                            \n                            \n                                deleteBookUserById\n                            \n                            \n                                getBookUserById\n                            \n                            \n                                UpdateBookUserByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addBookUserDetails\n                        \n                    \n                \n            \n            \n                \naddBookUserDetails(user: BookUsers)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/books-users/books-users.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                BookUsers\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteBookUserById\n                        \n                    \n                \n            \n            \n                \ndeleteBookUserById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/books-users/books-users.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBookUserById\n                        \n                    \n                \n            \n            \n                \ngetBookUserById(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/books-users/books-users.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UpdateBookUserByID\n                        \n                    \n                \n            \n            \n                \nUpdateBookUserByID(id: number, user: BookUsers)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n            \n                \n                    Defined in src/books-users/books-users.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                BookUsers\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Body, Controller, Delete, Get, Param, Post, Put, UseFilters } from '@nestjs/common';\nimport { BooksUsersService } from './books-users.service';\nimport { BookUsers } from 'src/books-users/entity/books-users.entity';\nimport { ApiTags } from '@nestjs/swagger';\nimport { HttpExceptionFilter } from 'src/filter/HttpExceptionFilter';\n\n@Controller('books-users')\n@ApiTags('books-users')\n@UseFilters(new HttpExceptionFilter())\nexport class BooksUsersController {\n    constructor(private readonly bookService: BooksUsersService) { }\n\n    @Get('/:id')\n    getBookUserById(@Param('id') id: number): Promise {\n        return this.bookService.getBookUserById(id);\n    }\n\n    @Post()\n    addBookUserDetails(@Body() user: BookUsers): Promise {\n        return this.bookService.addBookUserDetails(user);\n    }\n\n    @Delete('/:id')\n    deleteBookUserById(@Param('id') id: number): Promise {\n        return this.bookService.deleteBookUserById(id);\n    }\n\n    @Put('/:id')\n    UpdateBookUserByID(@Param('id') id: number, @Body() user: BookUsers): Promise {\n        return this.bookService.UpdateBookUserByID(id, user);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BooksUsersModule.html":{"url":"modules/BooksUsersModule.html","title":"module - BooksUsersModule","body":"\n                   \n\n\n\n\n    Modules\n    BooksUsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BooksUsersModule\n\n\n\ncluster_BooksUsersModule_providers\n\n\n\n\nBooksUsersService\n\nBooksUsersService\n\n\n\nBooksUsersModule\n\nBooksUsersModule\n\nBooksUsersModule -->\n\nBooksUsersService->BooksUsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/books-users/books-users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BooksUsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BooksUsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Person } from 'src/person/entity/person.entity';\nimport { BooksUsersController } from './books-users.controller';\nimport { BooksUsersService } from './books-users.service';\nimport { BookUsers } from './entity/books-users.entity';\nimport { Book } from './../books/entity/books.entity';\n\n@Module({\n    imports: [TypeOrmModule.forFeature([BookUsers, Person, Book])],\n\n    controllers: [BooksUsersController],\n    providers: [BooksUsersService],\n})\nexport class BooksUsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BooksUsersService.html":{"url":"injectables/BooksUsersService.html","title":"injectable - BooksUsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  BooksUsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/books-users/books-users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addBookUserDetails\n                            \n                            \n                                    Async\n                                deleteBookUserById\n                            \n                            \n                                    Async\n                                getBookUserById\n                            \n                            \n                                    Async\n                                UpdateBookUserByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(bookUserRepository: Repository, personRepository: Repository, bookRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/books-users/books-users.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        bookUserRepository\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        personRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bookRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addBookUserDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    addBookUserDetails(bookUser: BookUsers)\n                \n            \n\n\n            \n                \n                    Defined in src/books-users/books-users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    bookUser\n                                    \n                                                BookUsers\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        deleteBookUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteBookUserById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/books-users/books-users.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBookUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBookUserById(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/books-users/books-users.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        UpdateBookUserByID\n                        \n                    \n                \n            \n            \n                \n                    \n                    UpdateBookUserByID(id: number, bookUser: BookUsers)\n                \n            \n\n\n            \n                \n                    Defined in src/books-users/books-users.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bookUser\n                                    \n                                                BookUsers\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, ForbiddenException, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { BookUsers } from 'src/books-users/entity/books-users.entity';\nimport { Person } from 'src/person/entity/person.entity';\nimport { Book } from './../books/entity/books.entity';\n\n\n@Injectable()\nexport class BooksUsersService {\n    constructor(\n        @InjectRepository(BookUsers)\n        private bookUserRepository: Repository,\n        @InjectRepository(Person)\n        private personRepository: Repository,\n        @InjectRepository(Book)\n        private bookRepository: Repository,\n    ) { }\n\n    async addBookUserDetails(bookUser: BookUsers): Promise {\n        const personResult: Person = await this.personRepository.findOne({\n            emailId: bookUser.emailId\n        });\n        console.log(\"personResult \", personResult);\n        console.log(\"from personresu;t\", personResult);\n        const p1 = new BookUsers();\n        p1.ISBNNumber = bookUser.ISBNNumber;\n        p1.date = bookUser.date;\n        p1.reviewComments = bookUser.reviewComments;\n        p1.emailId = bookUser.emailId;\n        p1.addPerson(personResult);\n\n        const bookResult = await this.bookRepository.findOne({\n            ISBNNumber: bookUser.ISBNNumber\n        });\n        bookUser.bookName = bookResult.bookName;\n        p1.bookName = bookResult.bookName;\n        return await this.bookUserRepository.save(p1);\n    }\n\n    async getBookUserById(id: number): Promise {\n        const result = await this.bookUserRepository.findOne(id);\n        if (result) {\n            return result;\n        }\n        else {\n            throw new ForbiddenException();\n        }\n    }\n\n    async deleteBookUserById(id: number): Promise {\n        const result = await this.bookUserRepository.delete(id);\n        if (result) {\n            return 'Book Details deleted Succesfully'\n        }\n        else {\n            throw new BadRequestException();\n        }\n    }\n\n    async UpdateBookUserByID(id: number, bookUser: BookUsers): Promise {\n        const result = this.bookUserRepository.update(id, bookUser);\n        if (result) {\n            return 'Book Details Updated Succesfully'\n        }\n        else {\n            throw new BadRequestException();\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomException.html":{"url":"classes/CustomException.html","title":"class - CustomException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filter/customException.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(e: string)\n                    \n                \n                        \n                            \n                                Defined in src/filter/customException.exception.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from \"@nestjs/common\";\n\nexport class CustomException extends HttpException {\n    constructor(e: string) {\n        super(e, HttpStatus.NOT_FOUND);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filter/HttpExceptionFilter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filter/HttpExceptionFilter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n    catch(exception: HttpException, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n        const status = exception.getStatus();\n\n        response\n            .status(status)\n            .json({\n                statusCode: status,\n                timestamp: new Date().toISOString(),\n                path: request.url,\n                description:\"http error\"\n            });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Login.html":{"url":"classes/Login.html","title":"class - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/entity/login.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailId\n                            \n                            \n                                id\n                            \n                            \n                                password\n                            \n                            \n                                person\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/login/entity/login.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/login/entity/login.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/login/entity/login.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        person\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Person\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, undefined, {cascade: true})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/login/entity/login.entity.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Entity, PrimaryGeneratedColumn, Column, OneToOne, JoinColumn } from 'typeorm';\nimport { Person } from 'src/person/entity/person.entity';\n\n@Entity()\nexport class Login {\n\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    @ApiProperty()\n    emailId: string;\n\n    @Column()\n    @ApiProperty()\n    password: string;\n\n    @OneToOne(() => Person, person => person.login, {\n        cascade: true\n    })\n    @JoinColumn()\n    person: Person;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoginController.html":{"url":"controllers/LoginController.html","title":"controller - LoginController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoginController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/login.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                login\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllLoginDetails\n                            \n                            \n                                validateLoginCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAllLoginDetails\n                        \n                    \n                \n            \n            \n                \ngetAllLoginDetails()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAll')\n                \n            \n\n            \n                \n                    Defined in src/login/login.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateLoginCredentials\n                        \n                    \n                \n            \n            \n                \nvalidateLoginCredentials(login: Login)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/login/login.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                                Login\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Body, Controller, Get, Post } from '@nestjs/common';\nimport { LoginService } from './login.service';\nimport { Login } from 'src/login/entity/login.entity';\nimport { ApiTags } from '@nestjs/swagger';\n\n@Controller('login')\n@ApiTags('login')\nexport class LoginController {\n    constructor(private readonly loginService: LoginService) { }\n\n    // @Post()\n    // addLoginDetails(@Body() loginUser: Login): Promise {\n    //     return this.loginService.addLoginDetails(loginUser);\n    // }\n\n    @Post()\n    validateLoginCredentials(@Body() login: Login): Promise {\n        return this.loginService.validateLoginCredentials(login);\n    }\n    @Get(\"/getAll\")\n    getAllLoginDetails(): Promise {\n        return this.loginService.getAllLoginDetails();\n    };\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginModule.html":{"url":"modules/LoginModule.html","title":"module - LoginModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_providers\n\n\n\n\nLoginService\n\nLoginService\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoginService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoginController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { LoginController } from './login.controller';\nimport { LoginService } from './login.service';\nimport { Login } from 'src/login/entity/login.entity';\n\n@Module({\n    imports: [TypeOrmModule.forFeature([Login])],\n    controllers: [LoginController],\n    providers: [LoginService],\n})\nexport class LoginModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/login/login.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllLoginDetails\n                            \n                            \n                                    Async\n                                validateLoginCredentials\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loginRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/login/login.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllLoginDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllLoginDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateLoginCredentials\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateLoginCredentials(login: Login)\n                \n            \n\n\n            \n                \n                    Defined in src/login/login.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    login\n                                    \n                                                Login\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { CustomException } from 'src/filter/customException.exception';\nimport { Login } from 'src/login/entity/login.entity';\nimport { Repository } from 'typeorm';\n\n@Injectable()\nexport class LoginService {\n    constructor(\n        @InjectRepository(Login)\n        private loginRepository: Repository\n    ) { }\n\n    // async addLoginDetails(login: Login): Promise {\n    //     const emailId: string = login.emailId;\n    //     const person = await this.personRepository.find({ where: [{ emailId }] })\n    //     console.log(\"person obj : \", person[0].emailId, \" id: \", person[0].id)\n    //     login.person = person[0];\n    //     return this.loginRepository.save(login);\n    // }\n\n    async validateLoginCredentials(login: Login): Promise {\n        const loginResult = await this.loginRepository.findOne({\n            emailId: login.emailId\n        });\n        if (!loginResult) {\n            throw new HttpException(\"user email not found\", HttpStatus.BAD_REQUEST)\n        }\n        else {\n            const result: boolean = loginResult.emailId == login.emailId && loginResult.password == login.password;\n            if (result) {\n                return \"Succesfully logged in\";\n            }\n            throw new HttpException(\"credentials not wrong\", HttpStatus.BAD_REQUEST)\n        }\n    }\n    async getAllLoginDetails(): Promise {\n        const result = await this.loginRepository.find();\n        if (result) {\n            return result;\n        }\n        else {\n            throw new CustomException(\"no detail found\");\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Person.html":{"url":"classes/Person.html","title":"class - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/person/entity/person.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addressLine1\n                            \n                            \n                                addressLine2\n                            \n                            \n                                bookuser\n                            \n                            \n                                country\n                            \n                            \n                                emailId\n                            \n                            \n                                id\n                            \n                            \n                                login\n                            \n                            \n                                password\n                            \n                            \n                                phoneNum\n                            \n                            \n                                pincode\n                            \n                            \n                                state\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        addressLine1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/person/entity/person.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addressLine2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/person/entity/person.entity.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        bookuser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BookUsers\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/person/entity/person.entity.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/person/entity/person.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/person/entity/person.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/person/entity/person.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Login\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToOne(undefined, undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/person/entity/person.entity.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/person/entity/person.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/person/entity/person.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pincode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/person/entity/person.entity.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/person/entity/person.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/person/entity/person.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Login } from 'src/login/entity/login.entity';\nimport { Entity, PrimaryGeneratedColumn, Column, OneToOne, OneToMany } from 'typeorm';\nimport { BookUsers } from './../../books-users/entity/books-users.entity';\n\n@Entity()\nexport class Person {\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    @Column()\n    @ApiProperty()\n    userName: string;\n\n    @Column()\n    @ApiProperty()\n    password: string;\n\n    @Column()\n    @ApiProperty()\n    phoneNum: number;\n\n    @Column()\n    @ApiProperty()\n    emailId: string;\n\n    @Column()\n    @ApiProperty()\n    country: string;\n\n    @Column()\n    @ApiProperty()\n    state: string;\n\n    @Column()\n    @ApiProperty()\n    pincode: number;\n\n    @Column()\n    @ApiProperty()\n    addressLine1: string;\n\n    @Column()\n    @ApiProperty()\n    addressLine2: string;\n\n    @OneToOne(() => Login, login => login.person)\n    login: Login;\n\n    @OneToMany(() => BookUsers, bookuser => bookuser.person)\n    bookuser: BookUsers;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PersonController.html":{"url":"controllers/PersonController.html","title":"controller - PersonController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PersonController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/person/person.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                person\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPersonDetails\n                            \n                            \n                                    Async\n                                getAllPersonDetails\n                            \n                            \n                                getPersonByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPersonDetails\n                        \n                    \n                \n            \n            \n                \naddPersonDetails(person: Person)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/person/person.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    person\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllPersonDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPersonDetails()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAll')\n                \n            \n\n            \n                \n                    Defined in src/person/person.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPersonByID\n                        \n                    \n                \n            \n            \n                \ngetPersonByID(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/person/person.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { Body, CACHE_MANAGER, Controller, Get, Inject, Param, Post } from '@nestjs/common';\nimport { PersonService } from './person.service';\nimport { Person } from 'src/person/entity/person.entity';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Cache } from 'cache-manager'\n@Controller('person')\n@ApiTags('person')\nexport class PersonController {\n\n    constructor(private readonly personService: PersonService,\n        @Inject(CACHE_MANAGER) private cacheManager: Cache) { }\n\n    @Post()\n    addPersonDetails(@Body() person: Person): Promise {\n        return this.personService.addPersonDetails(person);\n    }\n\n    @Get(\"/getAll\")\n    async getAllPersonDetails(): Promise {\n        let result: any; \n        let cacheResult;\n        if (cacheResult) {\n            console.log(\"from cache result\");\n            return cacheResult;\n        }\n        else {\n            console.log(\"From normal result\");\n            result = this.personService.getAllPersonDetails();\n            this.cacheManager.set('getAllPersonDetails', result, { ttl: 300 });\n            cacheResult = (await this.cacheManager.get('getAllPersonDetails')).values;\n            console.log(cacheResult);\n            return result;\n        }\n    };\n\n    @Get('/:id')\n    getPersonByID(@Param('id') id: number): Promise {\n        return this.personService.getPersonByID(id);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PersonModule.html":{"url":"modules/PersonModule.html","title":"module - PersonModule","body":"\n                   \n\n\n\n\n    Modules\n    PersonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PersonModule\n\n\n\ncluster_PersonModule_providers\n\n\n\n\nPersonService\n\nPersonService\n\n\n\nPersonModule\n\nPersonModule\n\nPersonModule -->\n\nPersonService->PersonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/person/person.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PersonService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PersonController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable prettier/prettier */\nimport { CacheModule, Module } from '@nestjs/common';\nimport { PersonService } from './person.service';\nimport { Person } from 'src/person/entity/person.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { PersonController } from './person.controller';\nimport { Login } from './../login/entity/login.entity';\nimport { BookUsers } from 'src/books-users/entity/books-users.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Person, Login,BookUsers]),CacheModule.register()],\n  controllers: [PersonController],\n  providers: [PersonService],\n})\nexport class PersonModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PersonService.html":{"url":"injectables/PersonService.html","title":"injectable - PersonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PersonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/person/person.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addPersonDetails\n                            \n                            \n                                getAllPersonDetails\n                            \n                            \n                                    Async\n                                getPersonByID\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(personRepository: Repository, loginRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/person/person.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        personRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addPersonDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPersonDetails(person: Person)\n                \n            \n\n\n            \n                \n                    Defined in src/person/person.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    person\n                                    \n                                                Person\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllPersonDetails\n                        \n                    \n                \n            \n            \n                \ngetAllPersonDetails()\n                \n            \n\n\n            \n                \n                    Defined in src/person/person.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getPersonByID\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPersonByID(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/person/person.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Login } from 'src/login/entity/login.entity';\nimport { Repository } from 'typeorm';\nimport { Person } from './entity/person.entity';\nimport { CustomException } from './../filter/customException.exception';\n\n@Injectable()\nexport class PersonService {\n    constructor(\n        @InjectRepository(Person)\n        private personRepository: Repository,\n        @InjectRepository(Login)\n        private loginRepository: Repository\n    ) { }\n\n    async addPersonDetails(person: Person): Promise {\n        // eslint-disable-next-line prefer-const\n        let login: Login = new Login();\n        login.emailId = person.emailId;\n        login.password = person.password;\n        const person1 = await this.personRepository.save(person);\n        login.person = person1;\n        this.loginRepository.save(login);\n        return person1;\n    }\n\n    getAllPersonDetails(): Promise {\n        return this.personRepository.find();\n    }\n\n    async getPersonByID(id: number): Promise {\n        const result = await this.personRepository.findOne(id);\n        if (result) {\n            return result;\n        }\n        else {\n            throw new CustomException(\"person not found\");\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwaggerConfig.html":{"url":"interfaces/SwaggerConfig.html","title":"interface - SwaggerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SwaggerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/swagger/swagger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            tags\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SwaggerConfig {\n  title: string;\n  description: string;\n  version: string;\n  tags: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationExceptionFilter.html":{"url":"classes/ValidationExceptionFilter.html","title":"class - ValidationExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/filter/ValidationExceptionFilter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: BadRequestException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/filter/ValidationExceptionFilter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            BadRequestException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ExceptionFilter, Catch, ArgumentsHost, BadRequestException } from '@nestjs/common';\nimport { Request, Response } from 'express';\n\n@Catch(BadRequestException)\nexport class ValidationExceptionFilter implements ExceptionFilter {\n    catch(exception: BadRequestException, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n        const status = exception.getStatus();\n\n        response\n            .status(status)\n            .json({\n                statusCode: status,\n                timestamp: new Date().toISOString(),\n                path: request.url,\n                description:\"Bad request error\"\n            });\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pipes/ValidationPipes.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toValidate\n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: any)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/ValidationPipes.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/pipes/ValidationPipes.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata, BadRequestException } from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n  async transform(value: any, { metatype }: ArgumentMetadata) {\n    if (!metatype || !this.toValidate(metatype)) {\n      return value;\n    }\n    const object = plainToClass(metatype, value);\n    const errors = await validate(object);\n    if (errors.length > 0) {\n      throw new BadRequestException('Validation failed');\n    }\n    return value;\n  }\n\n  private toValidate(metatype: any): boolean {\n    const types: any = [String, Boolean, Number, Array, Object];\n    return !types.includes(metatype);\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/books-users/books-users.controller.ts\n            \n            controller\n            BooksUsersController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/books-users/books-users.service.ts\n            \n            injectable\n            BooksUsersService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/books-users/entity/books-users.entity.ts\n            \n            class\n            BookUsers\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/books/books.controller.ts\n            \n            controller\n            BooksController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/books/books.service.ts\n            \n            injectable\n            BooksService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/books/entity/books.entity.ts\n            \n            class\n            Book\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/filter/HttpExceptionFilter.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/filter/ValidationExceptionFilter.ts\n            \n            class\n            ValidationExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/filter/customException.exception.ts\n            \n            class\n            CustomException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/login/entity/login.entity.ts\n            \n            class\n            Login\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/login/login.controller.ts\n            \n            controller\n            LoginController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/login/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/person/entity/person.entity.ts\n            \n            class\n            Person\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/person/person.controller.ts\n            \n            controller\n            PersonController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/person/person.service.ts\n            \n            injectable\n            PersonService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/pipes/ValidationPipes.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/swagger/swagger.config.ts\n            \n            variable\n            SWAGGER_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/swagger/swagger.interface.ts\n            \n            interface\n            SwaggerConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/swagger/swagger.ts\n            \n            function\n            createDocument\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.1.5\n        \n            @nestjs/typeorm : ^8.0.2\n        \n            cache-manager : ^3.6.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            mysql2 : ^2.3.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger : ^0.7.5\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createDocument   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/swagger/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDocument\n                        \n                    \n                \n            \n            \n                \ncreateDocument(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OpenAPIObject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BooksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BooksUsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PersonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_BooksModule\n\n\n\ncluster_BooksModule_providers\n\n\n\ncluster_BooksUsersModule\n\n\n\ncluster_BooksUsersModule_providers\n\n\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_providers\n\n\n\ncluster_PersonModule\n\n\n\ncluster_PersonModule_providers\n\n\n\n\nBooksModule\n\nBooksModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nBooksModule->AppModule\n\n\n\n\n\nBooksUsersModule\n\nBooksUsersModule\n\nAppModule -->\n\nBooksUsersModule->AppModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nPersonModule\n\nPersonModule\n\nAppModule -->\n\nPersonModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nBooksService\n\nBooksService\n\nBooksModule -->\n\nBooksService->BooksModule\n\n\n\n\n\nBooksUsersService\n\nBooksUsersService\n\nBooksUsersModule -->\n\nBooksUsersService->BooksUsersModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\n\n\nPersonService\n\nPersonService\n\nPersonModule -->\n\nPersonService->PersonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SWAGGER_CONFIG   (src/.../swagger.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/swagger/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SWAGGER_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SwaggerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Book Mgmnt',\n  description: ' Book Mgmnt Opertaions ',\n  version: '1.0',\n  tags: ['Book Mgmnt'],\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
